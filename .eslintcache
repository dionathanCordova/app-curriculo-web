[{"/home/dntcordova/Documents/PROJETOS/app-curriculo/app-curriculo-web/src/pages/CreateCv/index.tsx":"1","/home/dntcordova/Documents/PROJETOS/app-curriculo/app-curriculo-web/src/components/SelectInput/index.tsx":"2","/home/dntcordova/Documents/PROJETOS/app-curriculo/app-curriculo-web/src/components/EscolaridadeFields/index.tsx":"3","/home/dntcordova/Documents/PROJETOS/app-curriculo/app-curriculo-web/src/pages/Dashboard/index.tsx":"4","/home/dntcordova/Documents/PROJETOS/app-curriculo/app-curriculo-web/src/pages/Profile/index.tsx":"5","/home/dntcordova/Documents/PROJETOS/app-curriculo/app-curriculo-web/src/pages/CreateCv/styles.ts":"6","/home/dntcordova/Documents/PROJETOS/app-curriculo/app-curriculo-web/src/components/SelectInput/styles.ts":"7","/home/dntcordova/Documents/PROJETOS/app-curriculo/app-curriculo-web/src/index.tsx":"8","/home/dntcordova/Documents/PROJETOS/app-curriculo/app-curriculo-web/src/routes/index.tsx":"9","/home/dntcordova/Documents/PROJETOS/app-curriculo/app-curriculo-web/src/pages/Login/index.tsx":"10","/home/dntcordova/Documents/PROJETOS/app-curriculo/app-curriculo-web/src/components/Header/index.tsx":"11","/home/dntcordova/Documents/PROJETOS/app-curriculo/app-curriculo-web/src/components/Header/styles.ts":"12","/home/dntcordova/Documents/PROJETOS/app-curriculo/app-curriculo-web/src/components/HeaderHome/styles.ts":"13","/home/dntcordova/Documents/PROJETOS/app-curriculo/app-curriculo-web/src/components/Tooltip/styles.ts":"14","/home/dntcordova/Documents/PROJETOS/app-curriculo/app-curriculo-web/src/contexts/Authcontext.tsx":"15","/home/dntcordova/Documents/PROJETOS/app-curriculo/app-curriculo-web/src/pages/Home/styles.ts":"16","/home/dntcordova/Documents/PROJETOS/app-curriculo/app-curriculo-web/src/pages/Dashboard/styles.ts":"17","/home/dntcordova/Documents/PROJETOS/app-curriculo/app-curriculo-web/src/components/Input/index.tsx":"18","/home/dntcordova/Documents/PROJETOS/app-curriculo/app-curriculo-web/src/components/Button/styles.ts":"19","/home/dntcordova/Documents/PROJETOS/app-curriculo/app-curriculo-web/src/App.tsx":"20","/home/dntcordova/Documents/PROJETOS/app-curriculo/app-curriculo-web/src/pages/Signin/index.tsx":"21","/home/dntcordova/Documents/PROJETOS/app-curriculo/app-curriculo-web/src/components/Button/index.tsx":"22","/home/dntcordova/Documents/PROJETOS/app-curriculo/app-curriculo-web/src/components/Tooltip/index.tsx":"23","/home/dntcordova/Documents/PROJETOS/app-curriculo/app-curriculo-web/src/pages/Home/index.tsx":"24","/home/dntcordova/Documents/PROJETOS/app-curriculo/app-curriculo-web/src/pages/Profile/styles.ts":"25","/home/dntcordova/Documents/PROJETOS/app-curriculo/app-curriculo-web/src/utils/getValidationErrors.ts":"26","/home/dntcordova/Documents/PROJETOS/app-curriculo/app-curriculo-web/src/components/Input/styles.ts":"27","/home/dntcordova/Documents/PROJETOS/app-curriculo/app-curriculo-web/src/pages/Login/styles.ts":"28","/home/dntcordova/Documents/PROJETOS/app-curriculo/app-curriculo-web/src/pages/Signin/styles.ts":"29","/home/dntcordova/Documents/PROJETOS/app-curriculo/app-curriculo-web/src/services/api.tsx":"30","/home/dntcordova/Documents/PROJETOS/app-curriculo/app-curriculo-web/src/components/HeaderHome/index.tsx":"31"},{"size":17785,"mtime":1611927247078,"results":"32","hashOfConfig":"33"},{"size":2020,"mtime":1611848237706,"results":"34","hashOfConfig":"33"},{"size":159,"mtime":1610628114708,"results":"35","hashOfConfig":"33"},{"size":2728,"mtime":1611932115074,"results":"36","hashOfConfig":"33"},{"size":6070,"mtime":1611837386124,"results":"37","hashOfConfig":"33"},{"size":2403,"mtime":1611837248729,"results":"38","hashOfConfig":"33"},{"size":1285,"mtime":1611669894490,"results":"39","hashOfConfig":"33"},{"size":197,"mtime":1608128146194,"results":"40","hashOfConfig":"33"},{"size":728,"mtime":1610022271776,"results":"41","hashOfConfig":"33"},{"size":2543,"mtime":1609250832538,"results":"42","hashOfConfig":"33"},{"size":1724,"mtime":1610632586958,"results":"43","hashOfConfig":"33"},{"size":1360,"mtime":1610370105283,"results":"44","hashOfConfig":"33"},{"size":855,"mtime":1609941063682,"results":"45","hashOfConfig":"33"},{"size":854,"mtime":1608819701202,"results":"46","hashOfConfig":"33"},{"size":3067,"mtime":1611924399873,"results":"47","hashOfConfig":"33"},{"size":870,"mtime":1608301237489,"results":"48","hashOfConfig":"33"},{"size":1223,"mtime":1611838741480,"results":"49","hashOfConfig":"33"},{"size":1877,"mtime":1611669519252,"results":"50","hashOfConfig":"33"},{"size":485,"mtime":1608482836105,"results":"51","hashOfConfig":"33"},{"size":386,"mtime":1609939137229,"results":"52","hashOfConfig":"33"},{"size":3771,"mtime":1611924495739,"results":"53","hashOfConfig":"33"},{"size":380,"mtime":1608476977856,"results":"54","hashOfConfig":"33"},{"size":374,"mtime":1608818058037,"results":"55","hashOfConfig":"33"},{"size":742,"mtime":1608400315931,"results":"56","hashOfConfig":"33"},{"size":1961,"mtime":1611837178308,"results":"57","hashOfConfig":"33"},{"size":343,"mtime":1611926800471,"results":"58","hashOfConfig":"33"},{"size":1430,"mtime":1611837040966,"results":"59","hashOfConfig":"33"},{"size":1365,"mtime":1611749740585,"results":"60","hashOfConfig":"33"},{"size":1365,"mtime":1611749747725,"results":"61","hashOfConfig":"33"},{"size":114,"mtime":1608837096448,"results":"62","hashOfConfig":"33"},{"size":708,"mtime":1608918172035,"results":"63","hashOfConfig":"33"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":13,"fixableErrorCount":0,"fixableWarningCount":0,"source":"66"},"r0xpo3",{"filePath":"67","messages":"68","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"69","messages":"70","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"71","messages":"72","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"73"},{"filePath":"74","messages":"75","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"77","messages":"78","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"79","messages":"80","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"81","messages":"82","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"83","messages":"84","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"85"},{"filePath":"86","messages":"87","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"85"},{"filePath":"88","messages":"89","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"90","usedDeprecatedRules":"76"},{"filePath":"91","messages":"92","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"93","messages":"94","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"95","messages":"96","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"97","messages":"98","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"99"},{"filePath":"100","messages":"101","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"85"},{"filePath":"102","messages":"103","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"104","messages":"105","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"106","messages":"107","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"108"},{"filePath":"109","messages":"110","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"111"},{"filePath":"112","messages":"113","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"114","messages":"115","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"116","usedDeprecatedRules":"85"},{"filePath":"117","messages":"118","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"119","messages":"120","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"121","messages":"122","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"123","messages":"124","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"125"},{"filePath":"126","messages":"127","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"85"},{"filePath":"128","messages":"129","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"85"},{"filePath":"130","messages":"131","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"132","messages":"133","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"134","messages":"135","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"85"},"/home/dntcordova/Documents/PROJETOS/app-curriculo/app-curriculo-web/src/pages/CreateCv/index.tsx",["136","137","138","139","140","141","142","143","144","145","146","147","148"],"import React, {\n   useCallback,\n   useContext,\n   useEffect,\n   useRef,\n   useState,\n} from \"react\";\n\nimport { Link, useHistory } from \"react-router-dom\";\nimport { FormHandles } from \"@unform/core\";\nimport { Form } from \"@unform/web\";\nimport { current, produce } from \"immer\";\n\nimport {\n   FiArrowLeft,\n   FiLock,\n   FiMail,\n   FiUser,\n   FiBriefcase,\n   FiPlus,\n   FiTrash,\n} from \"react-icons/fi\";\n\nimport { Container, Content, BoxInfo } from \"./styles\";\n\nimport Input from \"../../components/Input\";\nimport SelectInput from \"../../components/SelectInput\";\nimport Button from \"../../components/Button\";\nimport api from \"../../services/api\";\nimport EscolaridadeFields from \"../../components/EscolaridadeFields\";\nimport AuthContext from \"../../contexts/Authcontext\";\nimport swal from \"sweetalert\";\n\ninterface JobProps {\n   id: string;\n   name: string;\n   icon_path: string;\n}\n\ninterface EscolaridadeProp {\n   id: number;\n   instituicao: string;\n   curso: string;\n   situacao: string;\n}\n\ninterface ExperienciaProp {\n   id: number;\n   cargo: string;\n   empresa: string;\n   atribuicoes: string;\n   salario_final: string;\n   data_fim: string;\n   data_inicio: string;\n   atual: boolean;\n   ferramentas: string;\n}\n\ninterface CursoProp {\n   id: number;\n   titulo: string;\n}\n\nconst CreateCv: React.FC = () => {\n   const { user } = useContext(AuthContext);\n\n   const history = useHistory();\n\n   const formRef = useRef<FormHandles>(null);\n   const [ hiddenNewJobTitle, setHiddenNewJobTitle ] = useState(true);\n   const [ profissaoCreate, setProfissaoCreate ] = useState('');\n\n   const [escolaridadeIndex, setEscolaridadeIndex] = useState(0);\n   const [escolaridadeIndexArray, setEscolaridadeIndexArray] = useState([0]);\n\n   const [experienciaIndex, setExperienciaIndex] = useState(0);\n   const [experienciaIndexArray, setExperienciaIndexArray] = useState([0]);\n\n   const [cursosIndex, setCursosIndex] = useState(0);\n   const [cursosIndexArray, setCursosIndexArray] = useState([0]);\n\n   const [escolaridade, setEscolaridade] = useState<EscolaridadeProp[]>([\n      { id: 0, instituicao: \"\", curso: \"\", situacao: \"\" },\n   ]);\n\n   const [experiencia, setExperiencia] = useState<ExperienciaProp[]>([\n      {\n         id: 0,\n         cargo: \"\",\n         empresa: \"\",\n         atribuicoes: \"\",\n         salario_final: \"\",\n         data_fim: \"\",\n         data_inicio: \"\",\n         atual: false,\n         ferramentas: \"\",\n      },\n   ]);\n   const [cursos, setCursos] = useState<CursoProp[]>([{ id: 0, titulo: \"\" }]);\n\n   const [jobs, setJobs] = useState<JobProps[]>([\n      {\n         id: \"1\",\n         name: \"selecione\",\n         icon_path: \"\",\n      },\n   ]);\n\n   const handleSubmit = useCallback(\n      async (data) => {\n         const profissao_id = data.profissao;\n         console.log(profissao_id);\n\n         console.log(data);\n         console.log(escolaridade);\n         console.log(experiencia);\n         console.log(cursos);\n\n         // const createEscolaridade = await api.post(\n         //    `escolaridade/create/${user.id}`,\n         //    {\n         //       escolaridade,\n         //    }\n         // );\n\n         const createExperiencia = await api.post(\n            `experiencia/create/${user.id}`,\n            {\n               experiencia,\n               profissao_id\n            }\n         );\n\n         if(createExperiencia.data.status === 'error') {\n            swal({\n               title: \"Ops!\",\n               text: createExperiencia.data.message,\n               icon: \"warning\",\n            });\n         }\n\n         // if (createEscolaridade && createExperiencia) {\n         //    history.push(\"/dashboard\");\n         // }\n\n         console.log(createExperiencia.data.status);\n      },\n      [escolaridade, experiencia, cursos]\n   );\n\n   useEffect(() => {\n      (async function anyNameFunction() {\n         const job = await api.get(\"/profissoes\");\n\n         setJobs(job.data);\n      })();\n   }, []);\n\n   const handleAddEscolaridadeField = useCallback(() => {\n      const idGenerate = escolaridadeIndex + 1;\n\n      setEscolaridadeIndexArray([...escolaridadeIndexArray, idGenerate]);\n      setEscolaridadeIndex(idGenerate);\n\n      setEscolaridade((current) => [\n         ...current,\n         {\n            id: idGenerate,\n            instituicao: \"\",\n            curso: \"\",\n            situacao: \"\",\n         },\n      ]);\n   }, [escolaridadeIndex, escolaridade]);\n\n   const handleAddExperienciaField = useCallback(() => {\n      const idGerenate = experienciaIndex + 1;\n\n      setExperienciaIndex(idGerenate);\n      setExperienciaIndexArray([...experienciaIndexArray, idGerenate]);\n\n      setExperiencia((current) => [\n         ...current,\n         {\n            id: idGerenate,\n            empresa: \"\",\n            salario_final: \"\",\n            cargo: \"\",\n            atribuicoes: \"\",\n            data_fim: \"\",\n            data_inicio: \"\",\n            atual: false,\n            ferramentas: \"\",\n         },\n      ]);\n   }, [experienciaIndex, experiencia]);\n\n   const handleAddCurso = useCallback(() => {\n      const idGerenate = cursosIndex + 1;\n\n      setCursosIndex(idGerenate);\n      setCursosIndexArray([...cursosIndexArray, idGerenate]);\n\n      setCursos((current) => [\n         ...current,\n         {\n            id: idGerenate,\n            titulo: \"\",\n         },\n      ]);\n   }, [cursosIndex, cursos]);\n\n   const handleChangeFieldProfissao = useCallback(() => {\n      setHiddenNewJobTitle(!hiddenNewJobTitle);\n\n      if(!hiddenNewJobTitle) {\n         setProfissaoCreate('');\n      }\n   }, [hiddenNewJobTitle])\n\n   return (\n      <Container>\n         <header>\n            <div>\n               <Link to=\"dashboard\">\n                  <FiArrowLeft />\n               </Link>\n            </div>\n         </header>\n\n         <Content>\n            <Form ref={formRef} onSubmit={handleSubmit}>\n               <h1>Cadastro de currículo</h1>\n               <SelectInput\n                  isHidden={!hiddenNewJobTitle}\n                  name=\"profissao\"\n                  jobsData={jobs}\n               />\n\n               {/* <Input\n                  isHidden={hiddenNewJobTitle}\n                  onChange={(e) => setProfissaoCreate(e.target.value)}\n                  value={profissaoCreate}\n                  name=\"profissaoCreate\"\n                  placeholder=\"Nova profissão\"\n               />\n\n               <button type=\"button\" onClick={handleChangeFieldProfissao} className=\"CadastroProfissao\">\n                  {hiddenNewJobTitle ? 'Cadastrar nova profissão' : ' Usar profissões cadastradas'}\n               </button> */}\n\n               <BoxInfo>\n                  <h3>Escolaridade</h3>\n                  <button onClick={handleAddEscolaridadeField} type=\"button\">\n                     <FiPlus size={32} color=\"#FFF\" />\n                  </button>\n               </BoxInfo>{\" \"}\n               <hr />\n               <br />\n               {escolaridade.map((element, index) => {\n                  return (\n                     <div key={element.id} className=\"boxInputDinamico\">\n                        <div className=\"escolatidadeContentMain\">\n                           <div className=\"contentTrash\">\n                              <button\n                                 onClick={() =>\n                                    setEscolaridade((current) =>\n                                       current.filter(\n                                          (x) => x.id !== element.id\n                                       )\n                                    )\n                                 }\n                              >\n                                 <FiTrash color=\"#D21F3C\" />\n                              </button>\n                           </div>\n\n                           <Input\n                              defaultValue={element.instituicao}\n                              name=\"instituicao\"\n                              placeholder=\"Instituição\"\n                              onChange={(e) => {\n                                 const instituicao = e.target.value;\n                                 setEscolaridade((current) =>\n                                    produce(current, (v) => {\n                                       v[index].instituicao = instituicao;\n                                    })\n                                 );\n                              }}\n                           />\n\n                           <Input\n                              defaultValue={element.curso}\n                              name=\"curso\"\n                              placeholder=\"Curso\"\n                              onChange={(e) => {\n                                 const curso = e.target.value;\n                                 setEscolaridade((current) =>\n                                    produce(current, (v) => {\n                                       v[index].curso = curso;\n                                    })\n                                 );\n                              }}\n                           />\n\n                           <Input\n                              defaultValue={element.situacao}\n                              name=\"situação\"\n                              placeholder=\"Situação: ex cursando ...\"\n                              onChange={(e) => {\n                                 const situacao = e.target.value;\n                                 setEscolaridade((current) =>\n                                    produce(current, (v) => {\n                                       v[index].situacao = situacao;\n                                    })\n                                 );\n                              }}\n                           />\n                        </div>{\" \"}\n                        <br />\n                     </div>\n                  );\n               })}\n               <BoxInfo>\n                  <h3>Experiência</h3>\n                  <button onClick={handleAddExperienciaField} type=\"button\">\n                     <FiPlus size={32} color=\"#FFF\" />\n                  </button>\n               </BoxInfo>{\" \"}\n               <hr />\n               <br />\n               {experiencia.map((element, index) => {\n                  return (\n                     <div key={element.id} className=\"boxInputDinamico\">\n                        <div className=\"experiencia\">\n                           <div className=\"contentTrash\">\n                              <button\n                                 onClick={() =>\n                                    setExperiencia((current) =>\n                                       current.filter(\n                                          (x) => x.id !== element.id\n                                       )\n                                    )\n                                 }\n                              >\n                                 <FiTrash color=\"#D21F3C\" />\n                              </button>\n                           </div>\n\n                           <Input\n                              name=\"cargo\"\n                              placeholder=\"Cargo\"\n                              defaultValue={element.cargo}\n                              onChange={(e) => {\n                                 const cargo = e.target.value;\n                                 setExperiencia((current) =>\n                                    produce(current, (v) => {\n                                       v[index].cargo = cargo;\n                                    })\n                                 );\n                              }}\n                           />\n\n                           <Input\n                              name=\"empresa\"\n                              placeholder=\"Empresa\"\n                              defaultValue={element.empresa}\n                              onChange={(e) => {\n                                 const empresa = e.target.value;\n                                 setExperiencia((current) =>\n                                    produce(current, (v) => {\n                                       v[index].empresa = empresa;\n                                    })\n                                 );\n                              }}\n                           />\n\n                           <Input\n                              name=\"atribuicao\"\n                              placeholder=\"Atribuíções da função\"\n                              defaultValue={element.atribuicoes}\n                              onChange={(e) => {\n                                 const atribuicoes = e.target.value;\n                                 setExperiencia((current) =>\n                                    produce(current, (v) => {\n                                       v[index].atribuicoes = atribuicoes;\n                                    })\n                                 );\n                              }}\n                           />\n\n                           <Input\n                              name=\"atribuicao\"\n                              placeholder=\"Atribuíções da função\"\n                              defaultValue={element.ferramentas}\n                              onChange={(e) => {\n                                 const ferramentas = e.target.value;\n                                 setExperiencia((current) =>\n                                    produce(current, (v) => {\n                                       v[index].ferramentas = ferramentas;\n                                    })\n                                 );\n                              }}\n                           />\n\n                           <Input\n                              name=\"salarioFinal\"\n                              placeholder=\"Salário Final\"\n                              defaultValue={element.salario_final}\n                              onChange={(e) => {\n                                 const salario_final = e.target.value;\n                                 setExperiencia((current) =>\n                                    produce(current, (v) => {\n                                       v[index].salario_final = salario_final;\n                                    })\n                                 );\n                              }}\n                           />\n\n                           <Input\n                              label=\"Data de inicio\"\n                              name=\"data_inicio\"\n                              type=\"date\"\n                              placeholder=\"Tempo de Serviço\"\n                              id=\"data_inicio\"\n                              onChange={(e) => {\n                                 const data_inicio = e.target.value;\n                                 setExperiencia((current) =>\n                                    produce(current, (v) => {\n                                       v[index].data_inicio = data_inicio;\n                                    })\n                                 );\n                              }}\n                           />\n\n                           <Input\n                              label=\"Data de termino\"\n                              name=\"data_fim\"\n                              type=\"date\"\n                              placeholder=\"Tempo de Serviço\"\n                              id=\"data_fim\"\n                              onChange={(e) => {\n                                 const data_fim = e.target.value;\n                                 setExperiencia((current) =>\n                                    produce(current, (v) => {\n                                       v[index].data_fim = data_fim;\n                                    })\n                                 );\n                              }}\n                           />\n                        </div>{\" \"}\n                        <br />\n                     </div>\n                  );\n               })}\n               <BoxInfo>\n                  <h3>Cursos</h3>\n                  <button onClick={handleAddCurso} type=\"button\">\n                     <FiPlus size={32} color=\"#FFF\" />\n                  </button>\n               </BoxInfo>{\" \"}\n               <hr />\n               <br />\n               {/* {cursos.map((element, index) => {\n                  return (\n                     <div key={element.id} className=\"boxInputDinamico\">\n                        <div className=\"cursos\">\n                           <div className=\"contentTrash\">\n                              <button\n                                 onClick={() =>\n                                    setCursos((current) =>\n                                       current.filter(\n                                          (x) => x.id !== element.id\n                                       )\n                                    )\n                                 }\n                              >\n                                 <FiTrash color=\"#D21F3C\" />\n                              </button>\n                           </div>\n                           <Input\n                              name=\"titulo\"\n                              icon={FiUser}\n                              placeholder=\"Nome do curso\"\n                              defaultValue={element.titulo}\n                              onChange={(e) => {\n                                 const titulo = e.target.value;\n                                 setCursos((current) =>\n                                    produce(current, (v) => {\n                                       v[index].titulo = titulo;\n                                    })\n                                 );\n                              }}\n                           />\n                        </div>\n                     </div>\n                  );\n               })} */}\n               <Button type=\"submit\">Cadastrar</Button>\n            </Form>\n         </Content>\n      </Container>\n   );\n};\n\nexport default CreateCv;\n","/home/dntcordova/Documents/PROJETOS/app-curriculo/app-curriculo-web/src/components/SelectInput/index.tsx",[],"/home/dntcordova/Documents/PROJETOS/app-curriculo/app-curriculo-web/src/components/EscolaridadeFields/index.tsx",[],"/home/dntcordova/Documents/PROJETOS/app-curriculo/app-curriculo-web/src/pages/Dashboard/index.tsx",["149","150","151","152","153","154","155","156"],"import React, { useCallback, useContext, useEffect, useState } from 'react';\nimport { useHistory } from 'react-router-dom';\nimport Header from '../../components/Header';\nimport AuthProvider from '../../contexts/Authcontext';\nimport { FiPlus, FiCode, FiPhoneCall } from 'react-icons/fi';\nimport { FaDoorOpen, FaCalculator } from 'react-icons/fa';\n\nimport Code from '../../assets/ICON_JOBS/code.svg';\n\nimport { Container, Content, ContentHeader, ContentBody } from './styles';\nimport api from '../../services/api';\n\ninterface ProfissoesProps {\n   id: string;\n   name: string;\n   icon_path: string;\n}\n\n\ninterface CurriculoProps {\n   id: string;\n   user_id: string;\n   profissao_id: string;\n   profissao: ProfissoesProps\n}\n\nconst Dashboard: React.FC = () => {\n   const {signed, user } = useContext(AuthProvider);\n   const [ profissoes, setProfissoes ] = useState<ProfissoesProps[]>([]);\n   const [ curriculos, setCurriculos ] = useState<CurriculoProps[]>([]);\n   const histoty = useHistory();\n\n   useEffect(() => {\n      if(!signed) {\n         histoty.push('/');\n      }\n\n      // async function getProfissoes() {\n      //    await api.get('profissoes').then(respose => {\n      //       setProfissoes(respose.data)\n      //    })\n      // } \n     \n      async function getCurriculos() {\n         await api.get(`curriculo/user/${user.id}`).then(response => {\n            // console.log(response.data);\n            // setProfissoes(response.data[0].profissao);\n            setCurriculos(response.data);\n         })\n      } \n\n      getCurriculos();\n\n   }, [histoty, signed])\n\n   const handleAddCurriculo = useCallback(() => {\n      // console.log('teste');\n      histoty.push('/create-cv');\n   }, [histoty]);\n\n   return (\n      <Container>\n         <Header userName={user?.name ? user?.name : \"Usuário\"} pathImage={user?.avatar}/>\n\n         <Content>\n            <ContentHeader>\n               <div>\n                  <h1><strong> Currículos </strong></h1>\n                  <h5>Organize seu currículos, todos serão separados por categoria</h5>\n               </div>\n\n               <button onClick={handleAddCurriculo}>\n                  <FiPlus size={32} color=\"#FFF\"/>\n               </button>\n            </ContentHeader>\n\n            <ContentBody>\n               {curriculos.map(curr => {\n                  return (\n                     <div className=\"card\" key={curr.profissao.id}>\n                        <h4>{curr.profissao.name}</h4> \n                        <img src={`${process.env.REACT_APP_FILES}${curr.profissao.icon_path}`} alt=\"\"/>\n                     </div>\n                  )\n               })}\n               \n            </ContentBody>\n         </Content>\n      </Container>\n   )\n}\n\nexport default Dashboard;","/home/dntcordova/Documents/PROJETOS/app-curriculo/app-curriculo-web/src/pages/Profile/index.tsx",[],["157","158"],"/home/dntcordova/Documents/PROJETOS/app-curriculo/app-curriculo-web/src/pages/CreateCv/styles.ts",[],"/home/dntcordova/Documents/PROJETOS/app-curriculo/app-curriculo-web/src/components/SelectInput/styles.ts",[],"/home/dntcordova/Documents/PROJETOS/app-curriculo/app-curriculo-web/src/index.tsx",[],"/home/dntcordova/Documents/PROJETOS/app-curriculo/app-curriculo-web/src/routes/index.tsx",[],["159","160"],"/home/dntcordova/Documents/PROJETOS/app-curriculo/app-curriculo-web/src/pages/Login/index.tsx",[],"/home/dntcordova/Documents/PROJETOS/app-curriculo/app-curriculo-web/src/components/Header/index.tsx",["161","162","163","164"],"import React, { useCallback, useContext, useEffect } from 'react'\nimport { FiPower } from 'react-icons/fi';\nimport { Link, useHistory } from 'react-router-dom';\nimport icon from \"../../assets/icon.png\";\nimport AuthProvider from '../../contexts/Authcontext';\nimport emptyAvatar from '../../assets/empty-avatar.png';\nimport {  FiPaperclip } from 'react-icons/fi';\n\nimport {\n   Container,\n   Content,\n   Profile,\n   HeaderContent,\n   InfoAdicional\n} from './styles';\n\ninterface HeaderProps {\n   userName: string;\n   pathImage?: string;\n}\n\nconst Header: React.FC<HeaderProps> = ({userName, pathImage}) => {\n   const {signed, SignOut, user} = useContext(AuthProvider);\n   const history = useHistory();\n\n   useEffect(() => {\n   }, [user])\n\n   const handleSignout = useCallback(async( ) => {\n      const signout = await SignOut();\n      \n      if(!signout.signed) {\n         history.push('/');\n      }\n   }, [SignOut, history])\n\n   return (\n      <Container>\n         <Content>\n            <HeaderContent>\n               {/* <img src={icon} alt=\"\" width=\"140px\"/> */}\n               {/* <h4>Currículo App </h4>\n               <FiPaperclip /> */}\n                   \n               <Profile>\n                  <img src={pathImage ? `${process.env.REACT_APP_FILES}/${pathImage}` : emptyAvatar} alt=\"\" width=\"100px\"/>\n                  <div>\n                     <span>Bem vindo</span><br/>\n                     <Link to=\"profile\">{userName}</Link> \n                  </div>\n               </Profile>\n        \n               <button type=\"button\" onClick={() => handleSignout()}>\n                  <FiPower />\n               </button>\n            </HeaderContent>\n         </Content>\n      </Container>\n   )\n}\n\nexport default Header\n","/home/dntcordova/Documents/PROJETOS/app-curriculo/app-curriculo-web/src/components/Header/styles.ts",[],"/home/dntcordova/Documents/PROJETOS/app-curriculo/app-curriculo-web/src/components/HeaderHome/styles.ts",[],"/home/dntcordova/Documents/PROJETOS/app-curriculo/app-curriculo-web/src/components/Tooltip/styles.ts",[],"/home/dntcordova/Documents/PROJETOS/app-curriculo/app-curriculo-web/src/contexts/Authcontext.tsx",["165","166"],"import React, { createContext, useCallback, useState } from 'react';\nimport api from '../services/api';\n\ninterface UserProps {\n   id: string;\n   name: string;\n   email: string;\n   avatar: string;\n   whatsapp: string;\n   idade: string;\n   genero: string;\n   bio: string;\n   midias: string;\n   cidade: string;\n   estado: string;\n   bairro: string;\n   password: string;\n   // profissoes: ProfissaoProps[];\n}\n\n// interface ProfissaoProps {\n   // id: string;\n   // name: string;\n   // icon_path: string;\n// }\n\ninterface ResponseSigin {\n   user: UserProps;\n   token: string;\n   statusCode?: number | boolean;\n}\n\ninterface SignedResult {\n   status: boolean;\n}\n\ninterface AuthContextData {\n   signed: boolean;\n   user: UserProps;\n   SignIn(\n      email: string,\n      senha: string\n   ): Promise<{status: boolean}>;\n   SignOut: any;\n   UpdateUser(user: UserProps): void\n}\n\nconst AuthContext = createContext<AuthContextData>({} as AuthContextData);\n\nexport const AuthProvider: React.FC = ({ children }) => {\n   const [ user, setUser ] = useState<UserProps>({} as UserProps);\n   const [ signed, setSigned ] = useState(false);\n\n   const [ data, setData ] = useState<ResponseSigin>(() => {\n      const storageUser    = localStorage.getItem('@Curriculo:user');\n      const storageToken   = localStorage.getItem('@Curriculo:token');\n\n      if(storageUser && storageToken) {\n         return { user: JSON.parse(storageUser), token: storageToken};\n      }\n\n      return {} as ResponseSigin;\n   })\n\n   async function SignIn(email: string, password: string):Promise<SignedResult> {\n      try {\n         const response = await api.post<ResponseSigin>('auth', {\n            email, \n            password\n         })\n         const { user, token, statusCode } = response.data;\n         \n         if(statusCode === 200) {\n            localStorage.setItem(\"@Curriculo:user\", JSON.stringify(user));\n            localStorage.setItem(\"@Curriculo:token\", token);\n            \n            setUser(user);\n            setSigned(true);\n            setData({user, token});\n            \n            return { status : true}\n         }\n         \n         setSigned(false);\n         setUser({} as UserProps);\n         setData({} as ResponseSigin);\n   \n         return { status: false};\n      } catch (error) {\n         return { status: false};     \n      }\n   }\n\n   async function SignOut() {\n      localStorage.removeItem('@Curriculo:user');\n      localStorage.removeItem('@Curriculo:token');\n\n      setUser({} as UserProps);\n      setSigned(false);\n      setData({} as ResponseSigin);\n\n      return { signed: false};\n   }\n\n   const UpdateUser = useCallback((user: UserProps) => {\n      localStorage.setItem(\"@Curriculo:user\", JSON.stringify(user));\n      \n      setData({\n         token: data.token,\n         user,\n      });\n\n   }, [data.token])\n\n   return (\n      <AuthContext.Provider value={{ \n         user: data.user,\n         signed: !!data.user,\n         SignIn,\n         SignOut,\n         UpdateUser\n      }}>\n         {children}\n      </AuthContext.Provider>\n   )\n}\n\nexport default AuthContext;","/home/dntcordova/Documents/PROJETOS/app-curriculo/app-curriculo-web/src/pages/Home/styles.ts",[],"/home/dntcordova/Documents/PROJETOS/app-curriculo/app-curriculo-web/src/pages/Dashboard/styles.ts",[],"/home/dntcordova/Documents/PROJETOS/app-curriculo/app-curriculo-web/src/components/Input/index.tsx",[],"/home/dntcordova/Documents/PROJETOS/app-curriculo/app-curriculo-web/src/components/Button/styles.ts",[],["167","168"],"/home/dntcordova/Documents/PROJETOS/app-curriculo/app-curriculo-web/src/App.tsx",[],["169","170"],"/home/dntcordova/Documents/PROJETOS/app-curriculo/app-curriculo-web/src/pages/Signin/index.tsx",["171"],"/home/dntcordova/Documents/PROJETOS/app-curriculo/app-curriculo-web/src/components/Button/index.tsx",["172"],"import React, { ButtonHTMLAttributes, HTMLAttributes } from 'react';\n\nimport { Container } from './styles';\n\ninterface ButtonProps extends ButtonHTMLAttributes<HTMLButtonElement>{};\n\nconst Button: React.FC<ButtonProps> = ({type, children}: ButtonProps) => {\n  return (\n    <Container>\n      <button type={type}>{children}</button>\n    </Container>\n  );\n};\n\nexport default Button;\n","/home/dntcordova/Documents/PROJETOS/app-curriculo/app-curriculo-web/src/components/Tooltip/index.tsx",[],"/home/dntcordova/Documents/PROJETOS/app-curriculo/app-curriculo-web/src/pages/Home/index.tsx",[],"/home/dntcordova/Documents/PROJETOS/app-curriculo/app-curriculo-web/src/pages/Profile/styles.ts",[],"/home/dntcordova/Documents/PROJETOS/app-curriculo/app-curriculo-web/src/utils/getValidationErrors.ts",["173","174"],"import { ValidationError } from 'yup';\n\ninterface ErrorResponse {\n   [key: string] : string;\n}\n\nexport default function getValidationErrors(err: string): any {\n   const er = JSON.parse(err);\n   const validation: ErrorResponse = {};\n\n   er.map((erro:ErrorResponse) => {\n      validation[erro.path] = erro.message;\n   })\n\n   return validation;\n}","/home/dntcordova/Documents/PROJETOS/app-curriculo/app-curriculo-web/src/components/Input/styles.ts",[],"/home/dntcordova/Documents/PROJETOS/app-curriculo/app-curriculo-web/src/pages/Login/styles.ts",[],"/home/dntcordova/Documents/PROJETOS/app-curriculo/app-curriculo-web/src/pages/Signin/styles.ts",[],"/home/dntcordova/Documents/PROJETOS/app-curriculo/app-curriculo-web/src/services/api.tsx",[],"/home/dntcordova/Documents/PROJETOS/app-curriculo/app-curriculo-web/src/components/HeaderHome/index.tsx",[],{"ruleId":"175","severity":1,"message":"176","line":12,"column":10,"nodeType":"177","messageId":"178","endLine":12,"endColumn":17},{"ruleId":"175","severity":1,"message":"179","line":16,"column":4,"nodeType":"177","messageId":"178","endLine":16,"endColumn":10},{"ruleId":"175","severity":1,"message":"180","line":17,"column":4,"nodeType":"177","messageId":"178","endLine":17,"endColumn":10},{"ruleId":"175","severity":1,"message":"181","line":18,"column":4,"nodeType":"177","messageId":"178","endLine":18,"endColumn":10},{"ruleId":"175","severity":1,"message":"182","line":19,"column":4,"nodeType":"177","messageId":"178","endLine":19,"endColumn":15},{"ruleId":"175","severity":1,"message":"183","line":30,"column":8,"nodeType":"177","messageId":"178","endLine":30,"endColumn":26},{"ruleId":"175","severity":1,"message":"184","line":67,"column":10,"nodeType":"177","messageId":"178","endLine":67,"endColumn":17},{"ruleId":"175","severity":1,"message":"185","line":71,"column":12,"nodeType":"177","messageId":"178","endLine":71,"endColumn":27},{"ruleId":"186","severity":1,"message":"187","line":148,"column":7,"nodeType":"188","endLine":148,"endColumn":42,"suggestions":"189"},{"ruleId":"186","severity":1,"message":"190","line":174,"column":7,"nodeType":"188","endLine":174,"endColumn":40,"suggestions":"191"},{"ruleId":"186","severity":1,"message":"192","line":196,"column":7,"nodeType":"188","endLine":196,"endColumn":38,"suggestions":"193"},{"ruleId":"186","severity":1,"message":"194","line":211,"column":7,"nodeType":"188","endLine":211,"endColumn":28,"suggestions":"195"},{"ruleId":"175","severity":1,"message":"196","line":213,"column":10,"nodeType":"177","messageId":"178","endLine":213,"endColumn":36},{"ruleId":"175","severity":1,"message":"197","line":5,"column":18,"nodeType":"177","messageId":"178","endLine":5,"endColumn":24},{"ruleId":"175","severity":1,"message":"198","line":5,"column":26,"nodeType":"177","messageId":"178","endLine":5,"endColumn":37},{"ruleId":"175","severity":1,"message":"199","line":6,"column":10,"nodeType":"177","messageId":"178","endLine":6,"endColumn":20},{"ruleId":"175","severity":1,"message":"200","line":6,"column":22,"nodeType":"177","messageId":"178","endLine":6,"endColumn":34},{"ruleId":"175","severity":1,"message":"201","line":8,"column":8,"nodeType":"177","messageId":"178","endLine":8,"endColumn":12},{"ruleId":"175","severity":1,"message":"202","line":29,"column":12,"nodeType":"177","messageId":"178","endLine":29,"endColumn":22},{"ruleId":"175","severity":1,"message":"203","line":29,"column":24,"nodeType":"177","messageId":"178","endLine":29,"endColumn":37},{"ruleId":"186","severity":1,"message":"204","line":54,"column":7,"nodeType":"188","endLine":54,"endColumn":24,"suggestions":"205"},{"ruleId":"206","replacedBy":"207"},{"ruleId":"208","replacedBy":"209"},{"ruleId":"206","replacedBy":"210"},{"ruleId":"208","replacedBy":"211"},{"ruleId":"175","severity":1,"message":"212","line":4,"column":8,"nodeType":"177","messageId":"178","endLine":4,"endColumn":12},{"ruleId":"175","severity":1,"message":"213","line":7,"column":11,"nodeType":"177","messageId":"178","endLine":7,"endColumn":22},{"ruleId":"175","severity":1,"message":"214","line":14,"column":4,"nodeType":"177","messageId":"178","endLine":14,"endColumn":17},{"ruleId":"175","severity":1,"message":"215","line":23,"column":11,"nodeType":"177","messageId":"178","endLine":23,"endColumn":17},{"ruleId":"175","severity":1,"message":"216","line":51,"column":12,"nodeType":"177","messageId":"178","endLine":51,"endColumn":16},{"ruleId":"175","severity":1,"message":"215","line":52,"column":12,"nodeType":"177","messageId":"178","endLine":52,"endColumn":18},{"ruleId":"206","replacedBy":"217"},{"ruleId":"208","replacedBy":"218"},{"ruleId":"206","replacedBy":"219"},{"ruleId":"208","replacedBy":"220"},{"ruleId":"221","severity":1,"message":"222","line":111,"column":16,"nodeType":"223","endLine":111,"endColumn":28},{"ruleId":"175","severity":1,"message":"224","line":1,"column":39,"nodeType":"177","messageId":"178","endLine":1,"endColumn":53},{"ruleId":"175","severity":1,"message":"225","line":1,"column":10,"nodeType":"177","messageId":"178","endLine":1,"endColumn":25},{"ruleId":"226","severity":1,"message":"227","line":11,"column":32,"nodeType":"228","messageId":"229","endLine":11,"endColumn":34},"@typescript-eslint/no-unused-vars","'current' is defined but never used.","Identifier","unusedVar","'FiLock' is defined but never used.","'FiMail' is defined but never used.","'FiUser' is defined but never used.","'FiBriefcase' is defined but never used.","'EscolaridadeFields' is defined but never used.","'history' is assigned a value but never used.","'profissaoCreate' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useCallback has a missing dependency: 'user.id'. Either include it or remove the dependency array.","ArrayExpression",["230"],"React Hook useCallback has a missing dependency: 'escolaridadeIndexArray'. Either include it or remove the dependency array. You can also do a functional update 'setEscolaridadeIndexArray(e => ...)' if you only need 'escolaridadeIndexArray' in the 'setEscolaridadeIndexArray' call.",["231"],"React Hook useCallback has a missing dependency: 'experienciaIndexArray'. Either include it or remove the dependency array. You can also do a functional update 'setExperienciaIndexArray(e => ...)' if you only need 'experienciaIndexArray' in the 'setExperienciaIndexArray' call.",["232"],"React Hook useCallback has a missing dependency: 'cursosIndexArray'. Either include it or remove the dependency array. You can also do a functional update 'setCursosIndexArray(c => ...)' if you only need 'cursosIndexArray' in the 'setCursosIndexArray' call.",["233"],"'handleChangeFieldProfissao' is assigned a value but never used.","'FiCode' is defined but never used.","'FiPhoneCall' is defined but never used.","'FaDoorOpen' is defined but never used.","'FaCalculator' is defined but never used.","'Code' is defined but never used.","'profissoes' is assigned a value but never used.","'setProfissoes' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'user.id'. Either include it or remove the dependency array.",["234"],"no-native-reassign",["235"],"no-negated-in-lhs",["236"],["235"],["236"],"'icon' is defined but never used.","'FiPaperclip' is defined but never used.","'InfoAdicional' is defined but never used.","'signed' is assigned a value but never used.","'user' is assigned a value but never used.",["235"],["236"],["235"],["236"],"jsx-a11y/anchor-is-valid","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","'HTMLAttributes' is defined but never used.","'ValidationError' is defined but never used.","array-callback-return","Array.prototype.map() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside",{"desc":"237","fix":"238"},{"desc":"239","fix":"240"},{"desc":"241","fix":"242"},{"desc":"243","fix":"244"},{"desc":"245","fix":"246"},"no-global-assign","no-unsafe-negation","Update the dependencies array to be: [escolaridade, experiencia, cursos, user.id]",{"range":"247","text":"248"},"Update the dependencies array to be: [escolaridadeIndex, escolaridadeIndexArray]",{"range":"249","text":"250"},"Update the dependencies array to be: [experienciaIndex, experienciaIndexArray]",{"range":"251","text":"252"},"Update the dependencies array to be: [cursosIndex, cursosIndexArray]",{"range":"253","text":"254"},"Update the dependencies array to be: [histoty, signed, user.id]",{"range":"255","text":"256"},[3700,3735],"[escolaridade, experiencia, cursos, user.id]",[4335,4368],"[escolaridadeIndex, escolaridadeIndexArray]",[4931,4962],"[experienciaIndex, experienciaIndexArray]",[5295,5316],"[cursosIndex, cursosIndexArray]",[1549,1566],"[histoty, signed, user.id]"]