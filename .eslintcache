[{"/home/dntcordova/Documents/PROJETOS/app-curriculo/app-curriculo-web/src/pages/CreateCv/index.tsx":"1","/home/dntcordova/Documents/PROJETOS/app-curriculo/app-curriculo-web/src/components/SelectInput/index.tsx":"2","/home/dntcordova/Documents/PROJETOS/app-curriculo/app-curriculo-web/src/components/EscolaridadeFields/index.tsx":"3","/home/dntcordova/Documents/PROJETOS/app-curriculo/app-curriculo-web/src/pages/Dashboard/index.tsx":"4","/home/dntcordova/Documents/PROJETOS/app-curriculo/app-curriculo-web/src/pages/Profile/index.tsx":"5","/home/dntcordova/Documents/PROJETOS/app-curriculo/app-curriculo-web/src/pages/CreateCv/styles.ts":"6","/home/dntcordova/Documents/PROJETOS/app-curriculo/app-curriculo-web/src/components/SelectInput/styles.ts":"7","/home/dntcordova/Documents/PROJETOS/app-curriculo/app-curriculo-web/src/index.tsx":"8","/home/dntcordova/Documents/PROJETOS/app-curriculo/app-curriculo-web/src/routes/index.tsx":"9","/home/dntcordova/Documents/PROJETOS/app-curriculo/app-curriculo-web/src/pages/Login/index.tsx":"10","/home/dntcordova/Documents/PROJETOS/app-curriculo/app-curriculo-web/src/components/Header/index.tsx":"11","/home/dntcordova/Documents/PROJETOS/app-curriculo/app-curriculo-web/src/components/Header/styles.ts":"12","/home/dntcordova/Documents/PROJETOS/app-curriculo/app-curriculo-web/src/components/HeaderHome/styles.ts":"13","/home/dntcordova/Documents/PROJETOS/app-curriculo/app-curriculo-web/src/components/Tooltip/styles.ts":"14","/home/dntcordova/Documents/PROJETOS/app-curriculo/app-curriculo-web/src/contexts/Authcontext.tsx":"15","/home/dntcordova/Documents/PROJETOS/app-curriculo/app-curriculo-web/src/pages/Home/styles.ts":"16","/home/dntcordova/Documents/PROJETOS/app-curriculo/app-curriculo-web/src/pages/Dashboard/styles.ts":"17","/home/dntcordova/Documents/PROJETOS/app-curriculo/app-curriculo-web/src/components/Input/index.tsx":"18","/home/dntcordova/Documents/PROJETOS/app-curriculo/app-curriculo-web/src/components/Button/styles.ts":"19","/home/dntcordova/Documents/PROJETOS/app-curriculo/app-curriculo-web/src/App.tsx":"20","/home/dntcordova/Documents/PROJETOS/app-curriculo/app-curriculo-web/src/pages/Signin/index.tsx":"21","/home/dntcordova/Documents/PROJETOS/app-curriculo/app-curriculo-web/src/components/Button/index.tsx":"22","/home/dntcordova/Documents/PROJETOS/app-curriculo/app-curriculo-web/src/components/Tooltip/index.tsx":"23","/home/dntcordova/Documents/PROJETOS/app-curriculo/app-curriculo-web/src/pages/Home/index.tsx":"24","/home/dntcordova/Documents/PROJETOS/app-curriculo/app-curriculo-web/src/pages/Profile/styles.ts":"25","/home/dntcordova/Documents/PROJETOS/app-curriculo/app-curriculo-web/src/utils/getValidationErrors.ts":"26","/home/dntcordova/Documents/PROJETOS/app-curriculo/app-curriculo-web/src/components/Input/styles.ts":"27","/home/dntcordova/Documents/PROJETOS/app-curriculo/app-curriculo-web/src/pages/Login/styles.ts":"28","/home/dntcordova/Documents/PROJETOS/app-curriculo/app-curriculo-web/src/pages/Signin/styles.ts":"29"},{"size":16900,"mtime":1611668737139,"results":"30","hashOfConfig":"31"},{"size":1960,"mtime":1610632585078,"results":"32","hashOfConfig":"31"},{"size":159,"mtime":1610628114708,"results":"33","hashOfConfig":"31"},{"size":1964,"mtime":1610628926852,"results":"34","hashOfConfig":"31"},{"size":6069,"mtime":1610819012420,"results":"35","hashOfConfig":"31"},{"size":1969,"mtime":1611666355715,"results":"36","hashOfConfig":"31"},{"size":1198,"mtime":1610024992834,"results":"37","hashOfConfig":"31"},{"size":197,"mtime":1608128146194,"results":"38","hashOfConfig":"31"},{"size":728,"mtime":1610022271776,"results":"39","hashOfConfig":"31"},{"size":2543,"mtime":1609250832538,"results":"40","hashOfConfig":"31"},{"size":1724,"mtime":1610632586958,"results":"41","hashOfConfig":"31"},{"size":1360,"mtime":1610370105283,"results":"42","hashOfConfig":"31"},{"size":855,"mtime":1609941063682,"results":"43","hashOfConfig":"31"},{"size":854,"mtime":1608819701202,"results":"44","hashOfConfig":"31"},{"size":2932,"mtime":1609340452798,"results":"45","hashOfConfig":"31"},{"size":870,"mtime":1608301237489,"results":"46","hashOfConfig":"31"},{"size":1180,"mtime":1610022103286,"results":"47","hashOfConfig":"31"},{"size":1822,"mtime":1611665856958,"results":"48","hashOfConfig":"31"},{"size":485,"mtime":1608482836105,"results":"49","hashOfConfig":"31"},{"size":386,"mtime":1609939137229,"results":"50","hashOfConfig":"31"},{"size":3771,"mtime":1610632580446,"results":"51","hashOfConfig":"31"},{"size":380,"mtime":1608476977856,"results":"52","hashOfConfig":"31"},{"size":374,"mtime":1608818058037,"results":"53","hashOfConfig":"31"},{"size":742,"mtime":1608400315931,"results":"54","hashOfConfig":"31"},{"size":1887,"mtime":1610023219777,"results":"55","hashOfConfig":"31"},{"size":343,"mtime":1608649449356,"results":"56","hashOfConfig":"31"},{"size":1230,"mtime":1611667585192,"results":"57","hashOfConfig":"31"},{"size":1293,"mtime":1611666168636,"results":"58","hashOfConfig":"31"},{"size":1293,"mtime":1611666128479,"results":"59","hashOfConfig":"31"},{"filePath":"60","messages":"61","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"62"},"r0xpo3",{"filePath":"63","messages":"64","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"65"},{"filePath":"66","messages":"67","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"68","messages":"69","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"70","messages":"71","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"65"},{"filePath":"72","messages":"73","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"74","messages":"75","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"77","messages":"78","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"65"},{"filePath":"79","messages":"80","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"65"},{"filePath":"81","messages":"82","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"65"},{"filePath":"83","messages":"84","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"85","messages":"86","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"87","messages":"88","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"89"},{"filePath":"90","messages":"91","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"92","messages":"93","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"94","usedDeprecatedRules":"65"},{"filePath":"95","messages":"96","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"65"},{"filePath":"97","messages":"98","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"65"},{"filePath":"99","messages":"100","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"101","messages":"102","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"65"},{"filePath":"103","messages":"104","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"105","messages":"106","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"107","messages":"108","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"109","usedDeprecatedRules":"65"},{"filePath":"110","messages":"111","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"112","messages":"113","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"114","messages":"115","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"116","messages":"117","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"118","messages":"119","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"120","messages":"121","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"122","messages":"123","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/home/dntcordova/Documents/PROJETOS/app-curriculo/app-curriculo-web/src/pages/CreateCv/index.tsx",["124","125","126","127","128","129","130","131","132"],"import React, {\n   useCallback,\n   useContext,\n   useEffect,\n   useRef,\n   useState,\n} from \"react\";\n\nimport { Link, useHistory } from \"react-router-dom\";\nimport { FormHandles } from \"@unform/core\";\nimport { Form } from \"@unform/web\";\nimport { current, produce } from \"immer\";\n\nimport {\n   FiArrowLeft,\n   FiLock,\n   FiMail,\n   FiUser,\n   FiBriefcase,\n   FiPlus,\n   FiTrash,\n} from \"react-icons/fi\";\n\nimport { Container, Content, BoxInfo } from \"./styles\";\n\nimport Input from \"../../components/Input\";\nimport SelectInput from \"../../components/SelectInput\";\nimport Button from \"../../components/Button\";\nimport api from \"../../services/api\";\nimport EscolaridadeFields from \"../../components/EscolaridadeFields\";\nimport { string } from \"yup\";\nimport AuthContext from \"../../contexts/Authcontext\";\n\ninterface JobProps {\n   id: string;\n   name: string;\n   icon_path: string;\n}\n\ninterface EscolaridadeProp {\n   id: number;\n   instituicao: string;\n   curso: string;\n   situacao: string;\n}\n\ninterface ExperienciaProp {\n   id: number;\n   cargo: string;\n   empresa: string;\n   atribuicoes: string;\n   salario_final: string;\n   data_fim: string;\n   data_inicio: string;\n   atual: boolean;\n   ferramentas: string;\n}\n\ninterface CursoProp {\n   id: number;\n   titulo: string;\n}\n\nconst CreateCv: React.FC = () => {\n   const { user } = useContext(AuthContext);\n\n   const history = useHistory();\n\n   const formRef = useRef<FormHandles>(null);\n   const [escolaridadeIndex, setEscolaridadeIndex] = useState(0);\n   const [escolaridadeIndexArray, setEscolaridadeIndexArray] = useState([0]);\n\n   const [experienciaIndex, setExperienciaIndex] = useState(0);\n   const [experienciaIndexArray, setExperienciaIndexArray] = useState([0]);\n\n   const [cursosIndex, setCursosIndex] = useState(0);\n   const [cursosIndexArray, setCursosIndexArray] = useState([0]);\n\n   const [escolaridade, setEscolaridade] = useState<EscolaridadeProp[]>([\n      { id: 0, instituicao: \"\", curso: \"\", situacao: \"\" },\n   ]);\n\n   const [experiencia, setExperiencia] = useState<ExperienciaProp[]>([\n      {\n         id: 0,\n         cargo: \"\",\n         empresa: \"\",\n         atribuicoes: \"\",\n         salario_final: \"\",\n         data_fim: \"\",\n         data_inicio: \"\",\n         atual: false,\n         ferramentas: \"\",\n      },\n   ]);\n   const [cursos, setCursos] = useState<CursoProp[]>([{ id: 0, titulo: \"\" }]);\n\n   const [jobs, setJobs] = useState<JobProps[]>([\n      {\n         id: \"1\",\n         name: \"selecione\",\n         icon_path: \"\",\n      },\n   ]);\n\n   const handleSubmit = useCallback(\n      async (data) => {\n         console.log(data);\n         console.log(escolaridade);\n         console.log(experiencia);\n         console.log(cursos);\n\n         const createEscolaridade = await api.post(`escolaridade/create/${user.id}`, {\n               escolaridade,\n            }\n         );\n\n         const createExperiencia = await api.post(`experiencia/create/${user.id}`, {\n            experiencia\n         })\n\n         if (createEscolaridade && createExperiencia) {\n            history.push(\"/dashboard\");\n         }\n\n         console.log(createExperiencia);\n      },\n      [escolaridade, experiencia, cursos]\n   );\n\n   useEffect(() => {\n      (async function anyNameFunction() {\n         const job = await api.get(\"/profissoes\");\n\n         setJobs(job.data);\n      })();\n   }, []);\n\n   const handleAddEscolaridadeField = useCallback(() => {\n      const idGenerate = escolaridadeIndex + 1;\n\n      setEscolaridadeIndexArray([...escolaridadeIndexArray, idGenerate]);\n      setEscolaridadeIndex(idGenerate);\n\n      setEscolaridade((current) => [\n         ...current,\n         {\n            id: idGenerate,\n            instituicao: \"\",\n            curso: \"\",\n            situacao: \"\",\n         },\n      ]);\n   }, [escolaridadeIndex, escolaridade]);\n\n   const handleAddExperienciaField = useCallback(() => {\n      const idGerenate = experienciaIndex + 1;\n\n      setExperienciaIndex(idGerenate);\n      setExperienciaIndexArray([...experienciaIndexArray, idGerenate]);\n\n      setExperiencia((current) => [\n         ...current,\n         {\n            id: idGerenate,\n            empresa: \"\",\n            salario_final: \"\",\n            cargo: \"\",\n            atribuicoes: \"\",\n            data_fim: \"\",\n            data_inicio: \"\",\n            atual: false,\n            ferramentas: \"\",\n         },\n      ]);\n   }, [experienciaIndex, experiencia]);\n\n   const handleAddCurso = useCallback(() => {\n      const idGerenate = cursosIndex + 1;\n\n      setCursosIndex(idGerenate);\n      setCursosIndexArray([...cursosIndexArray, idGerenate]);\n\n      setCursos((current) => [\n         ...current,\n         {\n            id: idGerenate,\n            titulo: \"\",\n         },\n      ]);\n   }, [cursosIndex, cursos]);\n\n   return (\n      <Container>\n         <header>\n            <div>\n               <Link to=\"dashboard\">\n                  <FiArrowLeft />\n               </Link>\n            </div>\n         </header>\n\n         <Content>\n            <Form ref={formRef} onSubmit={handleSubmit}>\n               <h1>Cadastro de currículo</h1>\n               <SelectInput\n                  icon={FiBriefcase}\n                  name=\"profissao\"\n                  jobsData={jobs}\n               />\n               <BoxInfo>\n                  <h3>Escolaridade</h3>\n                  <button onClick={handleAddEscolaridadeField} type=\"button\">\n                     <FiPlus size={32} color=\"#FFF\" />\n                  </button>\n               </BoxInfo>{\" \"}\n               <hr />\n               <br />\n               {escolaridade.map((element, index) => {\n                  return (\n                     <div key={element.id} className=\"boxInputDinamico\">\n                        <div className=\"escolatidadeContentMain\">\n                           <div className=\"contentTrash\">\n                              <button\n                                 onClick={() =>\n                                    setEscolaridade((current) =>\n                                       current.filter(\n                                          (x) => x.id !== element.id\n                                       )\n                                    )\n                                 }\n                              >\n                                 <FiTrash color=\"#D21F3C\" />\n                              </button>\n                           </div>\n\n                           <Input\n                              defaultValue={element.instituicao}\n                              name=\"instituicao\"\n                              icon={FiUser}\n                              placeholder=\"Instituição\"\n                              onChange={(e) => {\n                                 const instituicao = e.target.value;\n                                 setEscolaridade((current) =>\n                                    produce(current, (v) => {\n                                       v[index].instituicao = instituicao;\n                                    })\n                                 );\n                              }}\n                           />\n\n                           <Input\n                              defaultValue={element.curso}\n                              name=\"curso\"\n                              icon={FiUser}\n                              placeholder=\"Curso\"\n                              onChange={(e) => {\n                                 const curso = e.target.value;\n                                 setEscolaridade((current) =>\n                                    produce(current, (v) => {\n                                       v[index].curso = curso;\n                                    })\n                                 );\n                              }}\n                           />\n\n                           <Input\n                              defaultValue={element.situacao}\n                              name=\"situação\"\n                              icon={FiUser}\n                              placeholder=\"Situação: ex cursando ...\"\n                              onChange={(e) => {\n                                 const situacao = e.target.value;\n                                 setEscolaridade((current) =>\n                                    produce(current, (v) => {\n                                       v[index].situacao = situacao;\n                                    })\n                                 );\n                              }}\n                           />\n                        </div>{\" \"}\n                        <br />\n                     </div>\n                  );\n               })}\n               <BoxInfo>\n                  <h3>Experiência</h3>\n                  <button onClick={handleAddExperienciaField} type=\"button\">\n                     <FiPlus size={32} color=\"#FFF\" />\n                  </button>\n               </BoxInfo>{\" \"}\n               <hr />\n               <br />\n               {experiencia.map((element, index) => {\n                  return (\n                     <div key={element.id} className=\"boxInputDinamico\">\n                        <div className=\"experiencia\">\n                           <div className=\"contentTrash\">\n                              <button\n                                 onClick={() =>\n                                    setExperiencia((current) =>\n                                       current.filter(\n                                          (x) => x.id !== element.id\n                                       )\n                                    )\n                                 }\n                              >\n                                 <FiTrash color=\"#D21F3C\" />\n                              </button>\n                           </div>\n\n                           <Input\n                              name=\"cargo\"\n                              icon={FiUser}\n                              placeholder=\"Cargo\"\n                              defaultValue={element.cargo}\n                              onChange={(e) => {\n                                 const cargo = e.target.value;\n                                 setExperiencia((current) =>\n                                    produce(current, (v) => {\n                                       v[index].cargo = cargo;\n                                    })\n                                 );\n                              }}\n                           />\n\n                           <Input\n                              name=\"empresa\"\n                              icon={FiUser}\n                              placeholder=\"Empresa\"\n                              defaultValue={element.empresa}\n                              onChange={(e) => {\n                                 const empresa = e.target.value;\n                                 setExperiencia((current) =>\n                                    produce(current, (v) => {\n                                       v[index].empresa = empresa;\n                                    })\n                                 );\n                              }}\n                           />\n\n                           <Input\n                              name=\"atribuicao\"\n                              icon={FiUser}\n                              placeholder=\"Atribuíções da função\"\n                              defaultValue={element.atribuicoes}\n                              onChange={(e) => {\n                                 const atribuicoes = e.target.value;\n                                 setExperiencia((current) =>\n                                    produce(current, (v) => {\n                                       v[index].atribuicoes = atribuicoes;\n                                    })\n                                 );\n                              }}\n                           />\n\n                           <Input\n                              name=\"atribuicao\"\n                              icon={FiUser}\n                              placeholder=\"Atribuíções da função\"\n                              defaultValue={element.ferramentas}\n                              onChange={(e) => {\n                                 const ferramentas = e.target.value;\n                                 setExperiencia((current) =>\n                                    produce(current, (v) => {\n                                       v[index].ferramentas = ferramentas;\n                                    })\n                                 );\n                              }}\n                           />\n\n                           <Input\n                              name=\"salarioFinal\"\n                              icon={FiUser}\n                              placeholder=\"Salário Final\"\n                              defaultValue={element.salario_final}\n                              onChange={(e) => {\n                                 const salario_final = e.target.value;\n                                 setExperiencia((current) =>\n                                    produce(current, (v) => {\n                                       v[index].salario_final = salario_final;\n                                    })\n                                 );\n                              }}\n                           />\n\n                           <Input\n                              label=\"Data de inicio\"\n                              name=\"data_inicio\"\n                              type=\"date\"\n                              icon={FiUser}\n                              placeholder=\"Tempo de Serviço\"\n                              id=\"data_inicio\"\n                              onChange={(e) => {\n                                 const data_inicio = e.target.value;\n                                 setExperiencia((current) =>\n                                    produce(current, (v) => {\n                                       v[index].data_inicio = data_inicio;\n                                    })\n                                 );\n                              }}\n                           />\n\n                           <Input\n                              label=\"Data de termino\"\n                              name=\"data_fim\"\n                              type=\"date\"\n                              icon={FiUser}\n                              placeholder=\"Tempo de Serviço\"\n                              id=\"data_fim\"\n                              onChange={(e) => {\n                                 const data_fim = e.target.value;\n                                 setExperiencia((current) =>\n                                    produce(current, (v) => {\n                                       v[index].data_fim = data_fim;\n                                    })\n                                 );\n                              }}\n                           />\n                        </div>{\" \"}\n                        <br />\n                     </div>\n                  );\n               })}\n               <BoxInfo>\n                  <h3>Cursos</h3>\n                  <button onClick={handleAddCurso} type=\"button\">\n                     <FiPlus size={32} color=\"#FFF\" />\n                  </button>\n               </BoxInfo>{\" \"}\n               <hr />\n               <br />\n               {/* {cursos.map((element, index) => {\n                  return (\n                     <div key={element.id} className=\"boxInputDinamico\">\n                        <div className=\"cursos\">\n                           <div className=\"contentTrash\">\n                              <button\n                                 onClick={() =>\n                                    setCursos((current) =>\n                                       current.filter(\n                                          (x) => x.id !== element.id\n                                       )\n                                    )\n                                 }\n                              >\n                                 <FiTrash color=\"#D21F3C\" />\n                              </button>\n                           </div>\n                           <Input\n                              name=\"titulo\"\n                              icon={FiUser}\n                              placeholder=\"Nome do curso\"\n                              defaultValue={element.titulo}\n                              onChange={(e) => {\n                                 const titulo = e.target.value;\n                                 setCursos((current) =>\n                                    produce(current, (v) => {\n                                       v[index].titulo = titulo;\n                                    })\n                                 );\n                              }}\n                           />\n                        </div>\n                     </div>\n                  );\n               })} */}\n               <Button type=\"submit\">Cadastrar</Button>\n            </Form>\n         </Content>\n      </Container>\n   );\n};\n\nexport default CreateCv;\n","/home/dntcordova/Documents/PROJETOS/app-curriculo/app-curriculo-web/src/components/SelectInput/index.tsx",[],["133","134"],"/home/dntcordova/Documents/PROJETOS/app-curriculo/app-curriculo-web/src/components/EscolaridadeFields/index.tsx",[],"/home/dntcordova/Documents/PROJETOS/app-curriculo/app-curriculo-web/src/pages/Dashboard/index.tsx",["135"],"/home/dntcordova/Documents/PROJETOS/app-curriculo/app-curriculo-web/src/pages/Profile/index.tsx",[],"/home/dntcordova/Documents/PROJETOS/app-curriculo/app-curriculo-web/src/pages/CreateCv/styles.ts",[],"/home/dntcordova/Documents/PROJETOS/app-curriculo/app-curriculo-web/src/components/SelectInput/styles.ts",[],["136","137"],"/home/dntcordova/Documents/PROJETOS/app-curriculo/app-curriculo-web/src/index.tsx",[],"/home/dntcordova/Documents/PROJETOS/app-curriculo/app-curriculo-web/src/routes/index.tsx",[],"/home/dntcordova/Documents/PROJETOS/app-curriculo/app-curriculo-web/src/pages/Login/index.tsx",[],"/home/dntcordova/Documents/PROJETOS/app-curriculo/app-curriculo-web/src/components/Header/index.tsx",["138","139","140","141"],"/home/dntcordova/Documents/PROJETOS/app-curriculo/app-curriculo-web/src/components/Header/styles.ts",[],"/home/dntcordova/Documents/PROJETOS/app-curriculo/app-curriculo-web/src/components/HeaderHome/styles.ts",[],["142","143"],"/home/dntcordova/Documents/PROJETOS/app-curriculo/app-curriculo-web/src/components/Tooltip/styles.ts",[],"/home/dntcordova/Documents/PROJETOS/app-curriculo/app-curriculo-web/src/contexts/Authcontext.tsx",["144","145"],"import React, { createContext, useCallback, useState } from 'react';\nimport api from '../services/api';\n\ninterface UserProps {\n   id: string;\n   name: string;\n   email: string;\n   avatar: string;\n   whatsapp: string;\n   idade: string;\n   genero: string;\n   bio: string;\n   midias: string;\n   cidade: string;\n   estado: string;\n   bairro: string;\n   password: string;\n}\n\ninterface ResponseSigin {\n   user: UserProps;\n   token: string;\n   statusCode?: number | boolean;\n}\n\ninterface SignedResult {\n   status: boolean;\n}\n\ninterface AuthContextData {\n   signed: boolean;\n   user: UserProps;\n   SignIn(\n      email: string,\n      senha: string\n   ): Promise<{status: boolean}>;\n   SignOut: any;\n   UpdateUser(user: UserProps): void\n}\n\nconst AuthContext = createContext<AuthContextData>({} as AuthContextData);\n\nexport const AuthProvider: React.FC = ({ children }) => {\n   const [ user, setUser ] = useState<UserProps>({} as UserProps);\n   const [ signed, setSigned ] = useState(false);\n\n   const [ data, setData ] = useState<ResponseSigin>(() => {\n      const storageUser    = localStorage.getItem('@Curriculo:user');\n      const storageToken   = localStorage.getItem('@Curriculo:token');\n\n      if(storageUser && storageToken) {\n         return { user: JSON.parse(storageUser), token: storageToken};\n      }\n\n      return {} as ResponseSigin;\n   })\n\n   async function SignIn(email: string, password: string):Promise<SignedResult> {\n      try {\n         const response = await api.post<ResponseSigin>('auth', {\n            email, \n            password\n         })\n         const { user, token, statusCode } = response.data;\n         \n         if(statusCode === 200) {\n            localStorage.setItem(\"@Curriculo:user\", JSON.stringify(user));\n            localStorage.setItem(\"@Curriculo:token\", token);\n            \n            setUser(user);\n            setSigned(true);\n            setData({user, token});\n            \n            return { status : true}\n         }\n         \n         setSigned(false);\n         setUser({} as UserProps);\n         setData({} as ResponseSigin);\n   \n         return { status: false};\n      } catch (error) {\n         return { status: false};     \n      }\n   }\n\n   async function SignOut() {\n      localStorage.removeItem('@Curriculo:user');\n      localStorage.removeItem('@Curriculo:token');\n\n      setUser({} as UserProps);\n      setSigned(false);\n      setData({} as ResponseSigin);\n\n      return { signed: false};\n   }\n\n   const UpdateUser = useCallback((user: UserProps) => {\n      localStorage.setItem(\"@Curriculo:user\", JSON.stringify(user));\n      \n      setData({\n         token: data.token,\n         user,\n      });\n\n   }, [data.token])\n\n   return (\n      <AuthContext.Provider value={{ \n         user: data.user,\n         signed: !!data.user,\n         SignIn,\n         SignOut,\n         UpdateUser\n      }}>\n         {children}\n      </AuthContext.Provider>\n   )\n}\n\nexport default AuthContext;","/home/dntcordova/Documents/PROJETOS/app-curriculo/app-curriculo-web/src/pages/Home/styles.ts",[],"/home/dntcordova/Documents/PROJETOS/app-curriculo/app-curriculo-web/src/pages/Dashboard/styles.ts",[],"/home/dntcordova/Documents/PROJETOS/app-curriculo/app-curriculo-web/src/components/Input/index.tsx",[],"/home/dntcordova/Documents/PROJETOS/app-curriculo/app-curriculo-web/src/components/Button/styles.ts",[],"/home/dntcordova/Documents/PROJETOS/app-curriculo/app-curriculo-web/src/App.tsx",[],"/home/dntcordova/Documents/PROJETOS/app-curriculo/app-curriculo-web/src/pages/Signin/index.tsx",["146"],"/home/dntcordova/Documents/PROJETOS/app-curriculo/app-curriculo-web/src/components/Button/index.tsx",["147"],"import React, { ButtonHTMLAttributes, HTMLAttributes } from 'react';\n\nimport { Container } from './styles';\n\ninterface ButtonProps extends ButtonHTMLAttributes<HTMLButtonElement>{};\n\nconst Button: React.FC<ButtonProps> = ({type, children}: ButtonProps) => {\n  return (\n    <Container>\n      <button type={type}>{children}</button>\n    </Container>\n  );\n};\n\nexport default Button;\n","/home/dntcordova/Documents/PROJETOS/app-curriculo/app-curriculo-web/src/components/Tooltip/index.tsx",[],"/home/dntcordova/Documents/PROJETOS/app-curriculo/app-curriculo-web/src/pages/Home/index.tsx",[],"/home/dntcordova/Documents/PROJETOS/app-curriculo/app-curriculo-web/src/pages/Profile/styles.ts",[],"/home/dntcordova/Documents/PROJETOS/app-curriculo/app-curriculo-web/src/utils/getValidationErrors.ts",["148","149"],"/home/dntcordova/Documents/PROJETOS/app-curriculo/app-curriculo-web/src/components/Input/styles.ts",[],"/home/dntcordova/Documents/PROJETOS/app-curriculo/app-curriculo-web/src/pages/Login/styles.ts",[],"/home/dntcordova/Documents/PROJETOS/app-curriculo/app-curriculo-web/src/pages/Signin/styles.ts",[],{"ruleId":"150","severity":1,"message":"151","line":12,"column":10,"nodeType":"152","messageId":"153","endLine":12,"endColumn":17},{"ruleId":"150","severity":1,"message":"154","line":16,"column":4,"nodeType":"152","messageId":"153","endLine":16,"endColumn":10},{"ruleId":"150","severity":1,"message":"155","line":17,"column":4,"nodeType":"152","messageId":"153","endLine":17,"endColumn":10},{"ruleId":"150","severity":1,"message":"156","line":30,"column":8,"nodeType":"152","messageId":"153","endLine":30,"endColumn":26},{"ruleId":"150","severity":1,"message":"157","line":31,"column":10,"nodeType":"152","messageId":"153","endLine":31,"endColumn":16},{"ruleId":"158","severity":1,"message":"159","line":128,"column":7,"nodeType":"160","endLine":128,"endColumn":42,"suggestions":"161"},{"ruleId":"158","severity":1,"message":"162","line":154,"column":7,"nodeType":"160","endLine":154,"endColumn":40,"suggestions":"163"},{"ruleId":"158","severity":1,"message":"164","line":176,"column":7,"nodeType":"160","endLine":176,"endColumn":38,"suggestions":"165"},{"ruleId":"158","severity":1,"message":"166","line":191,"column":7,"nodeType":"160","endLine":191,"endColumn":28,"suggestions":"167"},{"ruleId":"168","replacedBy":"169"},{"ruleId":"170","replacedBy":"171"},{"ruleId":"150","severity":1,"message":"172","line":1,"column":53,"nodeType":"152","messageId":"153","endLine":1,"endColumn":61},{"ruleId":"168","replacedBy":"173"},{"ruleId":"170","replacedBy":"174"},{"ruleId":"150","severity":1,"message":"175","line":4,"column":8,"nodeType":"152","messageId":"153","endLine":4,"endColumn":12},{"ruleId":"150","severity":1,"message":"176","line":7,"column":11,"nodeType":"152","messageId":"153","endLine":7,"endColumn":22},{"ruleId":"150","severity":1,"message":"177","line":14,"column":4,"nodeType":"152","messageId":"153","endLine":14,"endColumn":17},{"ruleId":"150","severity":1,"message":"178","line":23,"column":11,"nodeType":"152","messageId":"153","endLine":23,"endColumn":17},{"ruleId":"168","replacedBy":"179"},{"ruleId":"170","replacedBy":"180"},{"ruleId":"150","severity":1,"message":"181","line":44,"column":12,"nodeType":"152","messageId":"153","endLine":44,"endColumn":16},{"ruleId":"150","severity":1,"message":"178","line":45,"column":12,"nodeType":"152","messageId":"153","endLine":45,"endColumn":18},{"ruleId":"182","severity":1,"message":"183","line":111,"column":16,"nodeType":"184","endLine":111,"endColumn":28},{"ruleId":"150","severity":1,"message":"185","line":1,"column":39,"nodeType":"152","messageId":"153","endLine":1,"endColumn":53},{"ruleId":"150","severity":1,"message":"186","line":1,"column":10,"nodeType":"152","messageId":"153","endLine":1,"endColumn":25},{"ruleId":"187","severity":1,"message":"188","line":11,"column":32,"nodeType":"189","messageId":"190","endLine":11,"endColumn":34},"@typescript-eslint/no-unused-vars","'current' is defined but never used.","Identifier","unusedVar","'FiLock' is defined but never used.","'FiMail' is defined but never used.","'EscolaridadeFields' is defined but never used.","'string' is defined but never used.","react-hooks/exhaustive-deps","React Hook useCallback has missing dependencies: 'history' and 'user.id'. Either include them or remove the dependency array.","ArrayExpression",["191"],"React Hook useCallback has a missing dependency: 'escolaridadeIndexArray'. Either include it or remove the dependency array. You can also do a functional update 'setEscolaridadeIndexArray(e => ...)' if you only need 'escolaridadeIndexArray' in the 'setEscolaridadeIndexArray' call.",["192"],"React Hook useCallback has a missing dependency: 'experienciaIndexArray'. Either include it or remove the dependency array. You can also do a functional update 'setExperienciaIndexArray(e => ...)' if you only need 'experienciaIndexArray' in the 'setExperienciaIndexArray' call.",["193"],"React Hook useCallback has a missing dependency: 'cursosIndexArray'. Either include it or remove the dependency array. You can also do a functional update 'setCursosIndexArray(c => ...)' if you only need 'cursosIndexArray' in the 'setCursosIndexArray' call.",["194"],"no-native-reassign",["195"],"no-negated-in-lhs",["196"],"'useState' is defined but never used.",["195"],["196"],"'icon' is defined but never used.","'FiPaperclip' is defined but never used.","'InfoAdicional' is defined but never used.","'signed' is assigned a value but never used.",["195"],["196"],"'user' is assigned a value but never used.","jsx-a11y/anchor-is-valid","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","'HTMLAttributes' is defined but never used.","'ValidationError' is defined but never used.","array-callback-return","Array.prototype.map() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside",{"desc":"197","fix":"198"},{"desc":"199","fix":"200"},{"desc":"201","fix":"202"},{"desc":"203","fix":"204"},"no-global-assign","no-unsafe-negation","Update the dependencies array to be: [escolaridade, experiencia, cursos, user.id, history]",{"range":"205","text":"206"},"Update the dependencies array to be: [escolaridadeIndex, escolaridadeIndexArray]",{"range":"207","text":"208"},"Update the dependencies array to be: [experienciaIndex, experienciaIndexArray]",{"range":"209","text":"210"},"Update the dependencies array to be: [cursosIndex, cursosIndexArray]",{"range":"211","text":"212"},[3125,3160],"[escolaridade, experiencia, cursos, user.id, history]",[3760,3793],"[escolaridadeIndex, escolaridadeIndexArray]",[4356,4387],"[experienciaIndex, experienciaIndexArray]",[4720,4741],"[cursosIndex, cursosIndexArray]"]