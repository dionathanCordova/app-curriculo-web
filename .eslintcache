[{"/home/dntcordova/Documents/PROJETOS/app-curriculo/app-curriculo-web/src/pages/CreateCv/index.tsx":"1","/home/dntcordova/Documents/PROJETOS/app-curriculo/app-curriculo-web/src/components/SelectInput/index.tsx":"2","/home/dntcordova/Documents/PROJETOS/app-curriculo/app-curriculo-web/src/components/EscolaridadeFields/index.tsx":"3","/home/dntcordova/Documents/PROJETOS/app-curriculo/app-curriculo-web/src/pages/Dashboard/index.tsx":"4","/home/dntcordova/Documents/PROJETOS/app-curriculo/app-curriculo-web/src/pages/Profile/index.tsx":"5","/home/dntcordova/Documents/PROJETOS/app-curriculo/app-curriculo-web/src/pages/CreateCv/styles.ts":"6","/home/dntcordova/Documents/PROJETOS/app-curriculo/app-curriculo-web/src/components/SelectInput/styles.ts":"7","/home/dntcordova/Documents/PROJETOS/app-curriculo/app-curriculo-web/src/index.tsx":"8","/home/dntcordova/Documents/PROJETOS/app-curriculo/app-curriculo-web/src/routes/index.tsx":"9","/home/dntcordova/Documents/PROJETOS/app-curriculo/app-curriculo-web/src/pages/Login/index.tsx":"10","/home/dntcordova/Documents/PROJETOS/app-curriculo/app-curriculo-web/src/components/Header/index.tsx":"11","/home/dntcordova/Documents/PROJETOS/app-curriculo/app-curriculo-web/src/components/Header/styles.ts":"12","/home/dntcordova/Documents/PROJETOS/app-curriculo/app-curriculo-web/src/components/HeaderHome/styles.ts":"13","/home/dntcordova/Documents/PROJETOS/app-curriculo/app-curriculo-web/src/components/Tooltip/styles.ts":"14","/home/dntcordova/Documents/PROJETOS/app-curriculo/app-curriculo-web/src/contexts/Authcontext.tsx":"15","/home/dntcordova/Documents/PROJETOS/app-curriculo/app-curriculo-web/src/pages/Home/styles.ts":"16","/home/dntcordova/Documents/PROJETOS/app-curriculo/app-curriculo-web/src/pages/Dashboard/styles.ts":"17","/home/dntcordova/Documents/PROJETOS/app-curriculo/app-curriculo-web/src/components/Input/index.tsx":"18","/home/dntcordova/Documents/PROJETOS/app-curriculo/app-curriculo-web/src/components/Button/styles.ts":"19","/home/dntcordova/Documents/PROJETOS/app-curriculo/app-curriculo-web/src/App.tsx":"20","/home/dntcordova/Documents/PROJETOS/app-curriculo/app-curriculo-web/src/pages/Signin/index.tsx":"21","/home/dntcordova/Documents/PROJETOS/app-curriculo/app-curriculo-web/src/components/Button/index.tsx":"22","/home/dntcordova/Documents/PROJETOS/app-curriculo/app-curriculo-web/src/components/Tooltip/index.tsx":"23"},{"size":15006,"mtime":1611067653734,"results":"24","hashOfConfig":"25"},{"size":1960,"mtime":1610632585078,"results":"26","hashOfConfig":"25"},{"size":159,"mtime":1610628114708,"results":"27","hashOfConfig":"25"},{"size":1964,"mtime":1610628926852,"results":"28","hashOfConfig":"25"},{"size":6069,"mtime":1610819012420,"results":"29","hashOfConfig":"25"},{"size":2021,"mtime":1610975492884,"results":"30","hashOfConfig":"25"},{"size":1198,"mtime":1610024992834,"results":"31","hashOfConfig":"25"},{"size":197,"mtime":1608128146194,"results":"32","hashOfConfig":"25"},{"size":728,"mtime":1610022271776,"results":"33","hashOfConfig":"25"},{"size":2543,"mtime":1609250832538,"results":"34","hashOfConfig":"25"},{"size":1724,"mtime":1610632586958,"results":"35","hashOfConfig":"25"},{"size":1360,"mtime":1610370105283,"results":"36","hashOfConfig":"25"},{"size":855,"mtime":1609941063682,"results":"37","hashOfConfig":"25"},{"size":854,"mtime":1608819701202,"results":"38","hashOfConfig":"25"},{"size":2932,"mtime":1609340452798,"results":"39","hashOfConfig":"25"},{"size":870,"mtime":1608301237489,"results":"40","hashOfConfig":"25"},{"size":1180,"mtime":1610022103286,"results":"41","hashOfConfig":"25"},{"size":1665,"mtime":1610978746562,"results":"42","hashOfConfig":"25"},{"size":485,"mtime":1608482836105,"results":"43","hashOfConfig":"25"},{"size":386,"mtime":1609939137229,"results":"44","hashOfConfig":"25"},{"size":3771,"mtime":1610632580446,"results":"45","hashOfConfig":"25"},{"size":380,"mtime":1608476977856,"results":"46","hashOfConfig":"25"},{"size":374,"mtime":1608818058037,"results":"47","hashOfConfig":"25"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"50"},"r0xpo3",{"filePath":"51","messages":"52","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"53","messages":"54","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"55","messages":"56","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"57","messages":"58","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"59","messages":"60","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"61"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"61"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"69","messages":"70","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"61"},{"filePath":"71","messages":"72","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"73","messages":"74","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"75","messages":"76","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"77","messages":"78","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"79","messages":"80","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"81","messages":"82","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"61"},{"filePath":"83","messages":"84","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"85","messages":"86","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"61"},{"filePath":"87","messages":"88","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"89","messages":"90","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"91","messages":"92","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"93","messages":"94","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"95","messages":"96","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/home/dntcordova/Documents/PROJETOS/app-curriculo/app-curriculo-web/src/pages/CreateCv/index.tsx",["97","98","99","100","101","102","103","104","105"],"import React, { useCallback, useContext, useEffect, useRef, useState } from \"react\";\n\nimport { Link, useHistory } from \"react-router-dom\";\nimport { FormHandles } from \"@unform/core\";\nimport { Form } from \"@unform/web\";\nimport { current, produce } from \"immer\";\n\nimport {\n   FiArrowLeft,\n   FiLock,\n   FiMail,\n   FiUser,\n   FiBriefcase,\n   FiPlus,\n   FiTrash,\n} from \"react-icons/fi\";\n\nimport { Container, Content, BoxInfo } from \"./styles\";\n\nimport Input from \"../../components/Input\";\nimport SelectInput from \"../../components/SelectInput\";\nimport Button from \"../../components/Button\";\nimport api from \"../../services/api\";\nimport EscolaridadeFields from \"../../components/EscolaridadeFields\";\nimport { string } from \"yup\";\nimport AuthContext from \"../../contexts/Authcontext\";\n\ninterface JobProps {\n   id: string;\n   name: string;\n   icon_path: string;\n}\n\ninterface EscolaridadeProp {\n   id: number;\n   instituicao: string;\n   curso: string;\n   situacao: string;\n}\n\ninterface ExperienciaProp {\n   id: number;\n   cargo: string;\n   empresa: string;\n   atribuicao: string;\n   salarioFinal: string;\n   tempoServico: string;\n}\n\ninterface CursoProp {\n   id: number;\n   titulo: string;\n}\n\nconst CreateCv: React.FC = () => {\n   const { user } = useContext(AuthContext);\n\n   const history = useHistory();\n\n   const formRef = useRef<FormHandles>(null);\n   const [escolaridadeIndex, setEscolaridadeIndex] = useState(0);\n   const [escolaridadeIndexArray, setEscolaridadeIndexArray] = useState([0]);\n\n   const [experienciaIndex, setExperienciaIndex] = useState(0);\n   const [experienciaIndexArray, setExperienciaIndexArray] = useState([0]);\n\n   const [cursosIndex, setCursosIndex] = useState(0);\n   const [cursosIndexArray, setCursosIndexArray] = useState([0]);\n\n   const [escolaridade, setEscolaridade] = useState<EscolaridadeProp[]>([\n      { id: 0, instituicao: \"\", curso: \"\", situacao: \"\" },\n   ]);\n   const [experiencia, setExperiencia] = useState<ExperienciaProp[]>([\n      {\n         id: 0,\n         cargo: \"\",\n         empresa: \"\",\n         atribuicao: \"\",\n         salarioFinal: \"\",\n         tempoServico: \"\",\n      },\n   ]);\n   const [cursos, setCursos] = useState<CursoProp[]>([{ id: 0, titulo: \"\" }]);\n\n   const [jobs, setJobs] = useState<JobProps[]>([\n      {\n         id: \"1\",\n         name: \"selecione\",\n         icon_path: \"\",\n      },\n   ]);\n\n   const handleSubmit = useCallback(async (data) => {\n      console.log(data);\n      console.log(escolaridade);\n      console.log(experiencia);\n      console.log(cursos);\n\n      const createEscolaridade = await api.post(`escolaridade/create/${user.id}`, {\n         escolaridade\n      });\n\n      if(createEscolaridade) {\n         history.push('/dashboard');\n      }\n      \n      console.log(createEscolaridade);\n     \n      // escolaridade/create\n      // console.log(\"teste\");\n\n      // console.log(escolaridadeIndexArray);\n   }, [escolaridade, experiencia, cursos]);\n\n   useEffect(() => {\n      (async function anyNameFunction() {\n         const job = await api.get(\"/profissoes\");\n\n         setJobs(job.data);\n      })();\n   }, []);\n\n   const handleAddEscolaridadeField = useCallback(() => {\n      const idGenerate = escolaridadeIndex + 1;\n\n      setEscolaridadeIndexArray([...escolaridadeIndexArray, idGenerate]);\n      setEscolaridadeIndex(idGenerate);\n\n      setEscolaridade((current) => [\n         ...current,\n         {\n            id: idGenerate,\n            instituicao: \"\",\n            curso: \"\",\n            situacao: \"\",\n         },\n      ]);\n   }, [escolaridadeIndex, escolaridade]);\n\n   const handleAddExperienciaField = useCallback(() => {\n      const idGerenate = experienciaIndex + 1;\n\n      setExperienciaIndex(idGerenate);\n      setExperienciaIndexArray([...experienciaIndexArray, idGerenate]);\n\n      setExperiencia((current) => [\n         ...current,\n         {\n            id: idGerenate,\n            atribuicao: \"\",\n            cargo: \"\",\n            empresa: \"\",\n            salarioFinal: \"\",\n            tempoServico: \"\",\n         },\n      ]);\n   }, [experienciaIndex, experiencia]);\n\n   const handleAddCurso = useCallback(() => {\n      const idGerenate = cursosIndex + 1;\n\n      setCursosIndex(idGerenate);\n      setCursosIndexArray([...cursosIndexArray, idGerenate]);\n\n      setCursos((current) => [\n         ...current,\n         {\n            id: idGerenate,\n            titulo: \"\",\n         },\n      ]);\n   }, [cursosIndex, cursos]);\n\n   return (\n      <Container>\n         <header>\n            <div>\n               <Link to=\"dashboard\">\n                  <FiArrowLeft />\n               </Link>\n            </div>\n         </header>\n\n         <Content>\n            <Form ref={formRef} onSubmit={handleSubmit}>\n               <h1>Cadastro de currículo</h1>\n               <SelectInput\n                  icon={FiBriefcase}\n                  name=\"profissao\"\n                  jobsData={jobs}\n               />\n               <BoxInfo>\n                  <h3>Escolaridade</h3>\n                  <button onClick={handleAddEscolaridadeField} type=\"button\">\n                     <FiPlus size={32} color=\"#FFF\" />\n                  </button>\n               </BoxInfo>{\" \"}\n               <hr />\n               <br />\n               {escolaridade.map((element, index) => {\n                  return (\n                     <div key={element.id} className=\"boxInputDinamico\">\n                        <div className=\"escolatidadeContentMain\">\n                           <div className=\"contentTrash\">\n                              <button\n                                 onClick={() =>\n                                    setEscolaridade((current) =>\n                                       current.filter(\n                                          (x) => x.id !== element.id\n                                       )\n                                    )\n                                 }\n                              >\n                                 <FiTrash color=\"#D21F3C\" />\n                              </button>\n                           </div>\n\n                           <Input\n                              defaultValue={element.instituicao}\n                              name=\"instituicao\"\n                              icon={FiUser}\n                              placeholder=\"Instituição\"\n                              onChange={(e) => {\n                                 const instituicao = e.target.value;\n                                 setEscolaridade((current) =>\n                                    produce(current, (v) => {\n                                       v[index].instituicao = instituicao;\n                                    })\n                                 );\n                              }}\n                           />\n\n                           <Input\n                              defaultValue={element.curso}\n                              name=\"curso\"\n                              icon={FiUser}\n                              placeholder=\"Curso\"\n                              onChange={(e) => {\n                                 const curso = e.target.value;\n                                 setEscolaridade((current) =>\n                                    produce(current, (v) => {\n                                       v[index].curso = curso;\n                                    })\n                                 );\n                              }}\n                           />\n\n                           <Input\n                              defaultValue={element.situacao}\n                              name=\"situação\"\n                              icon={FiUser}\n                              placeholder=\"Situação: ex cursando ...\"\n                              onChange={(e) => {\n                                 const situacao = e.target.value;\n                                 setEscolaridade((current) =>\n                                    produce(current, (v) => {\n                                       v[index].situacao = situacao;\n                                    })\n                                 );\n                              }}\n                           />\n                        </div>{\" \"}\n                        <br />\n                     </div>\n                  );\n               })}\n               <BoxInfo>\n                  <h3>Experiência</h3>\n                  <button onClick={handleAddExperienciaField} type=\"button\">\n                     <FiPlus size={32} color=\"#FFF\" />\n                  </button>\n               </BoxInfo>{\" \"}\n               <hr />\n               <br />\n               {experiencia.map((element, index) => {\n                  return (\n                     <div key={element.id} className=\"boxInputDinamico\">\n                        <div className=\"experiencia\">\n                           <div className=\"contentTrash\">\n                              <button\n                                 onClick={() =>\n                                    setExperiencia((current) =>\n                                       current.filter(\n                                          (x) => x.id !== element.id\n                                       )\n                                    )\n                                 }\n                              >\n                                 <FiTrash color=\"#D21F3C\" />\n                              </button>\n                           </div>\n\n                           <Input\n                              name=\"cargo\"\n                              icon={FiUser}\n                              placeholder=\"Cargo\"\n                              defaultValue={element.cargo}\n                              onChange={(e) => {\n                                 const cargo = e.target.value;\n                                 setExperiencia((current) =>\n                                    produce(current, (v) => {\n                                       v[index].cargo = cargo;\n                                    })\n                                 );\n                              }}\n                           />\n\n                           <Input\n                              name=\"empresa\"\n                              icon={FiUser}\n                              placeholder=\"Empresa\"\n                              defaultValue={element.empresa}\n                              onChange={(e) => {\n                                 const cargo = e.target.value;\n                                 setExperiencia((current) =>\n                                    produce(current, (v) => {\n                                       v[index].empresa = cargo;\n                                    })\n                                 );\n                              }}\n                           />\n\n                           <Input\n                              name=\"atribuicao\"\n                              icon={FiUser}\n                              placeholder=\"Atribuíções da função\"\n                              defaultValue={element.atribuicao}\n                              onChange={(e) => {\n                                 const cargo = e.target.value;\n                                 setExperiencia((current) =>\n                                    produce(current, (v) => {\n                                       v[index].atribuicao = cargo;\n                                    })\n                                 );\n                              }}\n                           />\n\n                           <Input\n                              name=\"salarioFinal\"\n                              icon={FiUser}\n                              placeholder=\"Salário Final\"\n                              defaultValue={element.salarioFinal}\n                              onChange={(e) => {\n                                 const cargo = e.target.value;\n                                 setExperiencia((current) =>\n                                    produce(current, (v) => {\n                                       v[index].salarioFinal = cargo;\n                                    })\n                                 );\n                              }}\n                           />\n\n                           <Input\n                              name=\"tempoServico\"\n                              icon={FiUser}\n                              placeholder=\"Tempo de Serviço\"\n                              defaultValue={element.tempoServico}\n                              id=\"tempoServico\"\n                              onChange={(e) => {\n                                 const cargo = e.target.value;\n                                 setExperiencia((current) =>\n                                    produce(current, (v) => {\n                                       v[index].tempoServico = cargo;\n                                    })\n                                 );\n                              }}\n                           />\n                        </div>{\" \"}\n                        <br />\n                     </div>\n                  );\n               })}\n               <BoxInfo>\n                  <h3>Cursos</h3>\n                  <button onClick={handleAddCurso} type=\"button\">\n                     <FiPlus size={32} color=\"#FFF\" />\n                  </button>\n               </BoxInfo>{\" \"}\n               <hr />\n               <br />\n               {/* {cursos.map((element, index) => {\n                  return (\n                     <div key={element.id} className=\"boxInputDinamico\">\n                        <div className=\"cursos\">\n                           <div className=\"contentTrash\">\n                              <button\n                                 onClick={() =>\n                                    setCursos((current) =>\n                                       current.filter(\n                                          (x) => x.id !== element.id\n                                       )\n                                    )\n                                 }\n                              >\n                                 <FiTrash color=\"#D21F3C\" />\n                              </button>\n                           </div>\n                           <Input\n                              name=\"titulo\"\n                              icon={FiUser}\n                              placeholder=\"Nome do curso\"\n                              defaultValue={element.titulo}\n                              onChange={(e) => {\n                                 const titulo = e.target.value;\n                                 setCursos((current) =>\n                                    produce(current, (v) => {\n                                       v[index].titulo = titulo;\n                                    })\n                                 );\n                              }}\n                           />\n                        </div>\n                     </div>\n                  );\n               })} */}\n               <Button type=\"submit\">Cadastrar</Button>\n            </Form>\n         </Content>\n      </Container>\n   );\n};\n\nexport default CreateCv;\n","/home/dntcordova/Documents/PROJETOS/app-curriculo/app-curriculo-web/src/components/SelectInput/index.tsx",[],"/home/dntcordova/Documents/PROJETOS/app-curriculo/app-curriculo-web/src/components/EscolaridadeFields/index.tsx",[],"/home/dntcordova/Documents/PROJETOS/app-curriculo/app-curriculo-web/src/pages/Dashboard/index.tsx",["106"],"/home/dntcordova/Documents/PROJETOS/app-curriculo/app-curriculo-web/src/pages/Profile/index.tsx",[],"/home/dntcordova/Documents/PROJETOS/app-curriculo/app-curriculo-web/src/pages/CreateCv/styles.ts",[],["107","108"],"/home/dntcordova/Documents/PROJETOS/app-curriculo/app-curriculo-web/src/components/SelectInput/styles.ts",[],"/home/dntcordova/Documents/PROJETOS/app-curriculo/app-curriculo-web/src/index.tsx",[],["109","110"],"/home/dntcordova/Documents/PROJETOS/app-curriculo/app-curriculo-web/src/routes/index.tsx",[],"/home/dntcordova/Documents/PROJETOS/app-curriculo/app-curriculo-web/src/pages/Login/index.tsx",[],"/home/dntcordova/Documents/PROJETOS/app-curriculo/app-curriculo-web/src/components/Header/index.tsx",["111","112","113","114"],"/home/dntcordova/Documents/PROJETOS/app-curriculo/app-curriculo-web/src/components/Header/styles.ts",[],"/home/dntcordova/Documents/PROJETOS/app-curriculo/app-curriculo-web/src/components/HeaderHome/styles.ts",[],"/home/dntcordova/Documents/PROJETOS/app-curriculo/app-curriculo-web/src/components/Tooltip/styles.ts",[],"/home/dntcordova/Documents/PROJETOS/app-curriculo/app-curriculo-web/src/contexts/Authcontext.tsx",["115","116"],"/home/dntcordova/Documents/PROJETOS/app-curriculo/app-curriculo-web/src/pages/Home/styles.ts",[],"/home/dntcordova/Documents/PROJETOS/app-curriculo/app-curriculo-web/src/pages/Dashboard/styles.ts",[],"/home/dntcordova/Documents/PROJETOS/app-curriculo/app-curriculo-web/src/components/Input/index.tsx",[],"/home/dntcordova/Documents/PROJETOS/app-curriculo/app-curriculo-web/src/components/Button/styles.ts",[],"/home/dntcordova/Documents/PROJETOS/app-curriculo/app-curriculo-web/src/App.tsx",[],"/home/dntcordova/Documents/PROJETOS/app-curriculo/app-curriculo-web/src/pages/Signin/index.tsx",["117"],"/home/dntcordova/Documents/PROJETOS/app-curriculo/app-curriculo-web/src/components/Button/index.tsx",["118"],"/home/dntcordova/Documents/PROJETOS/app-curriculo/app-curriculo-web/src/components/Tooltip/index.tsx",[],{"ruleId":"119","severity":1,"message":"120","line":6,"column":10,"nodeType":"121","messageId":"122","endLine":6,"endColumn":17},{"ruleId":"119","severity":1,"message":"123","line":10,"column":4,"nodeType":"121","messageId":"122","endLine":10,"endColumn":10},{"ruleId":"119","severity":1,"message":"124","line":11,"column":4,"nodeType":"121","messageId":"122","endLine":11,"endColumn":10},{"ruleId":"119","severity":1,"message":"125","line":24,"column":8,"nodeType":"121","messageId":"122","endLine":24,"endColumn":26},{"ruleId":"119","severity":1,"message":"126","line":25,"column":10,"nodeType":"121","messageId":"122","endLine":25,"endColumn":16},{"ruleId":"127","severity":1,"message":"128","line":113,"column":7,"nodeType":"129","endLine":113,"endColumn":42,"suggestions":"130"},{"ruleId":"127","severity":1,"message":"131","line":138,"column":7,"nodeType":"129","endLine":138,"endColumn":40,"suggestions":"132"},{"ruleId":"127","severity":1,"message":"133","line":157,"column":7,"nodeType":"129","endLine":157,"endColumn":38,"suggestions":"134"},{"ruleId":"127","severity":1,"message":"135","line":172,"column":7,"nodeType":"129","endLine":172,"endColumn":28,"suggestions":"136"},{"ruleId":"119","severity":1,"message":"137","line":1,"column":53,"nodeType":"121","messageId":"122","endLine":1,"endColumn":61},{"ruleId":"138","replacedBy":"139"},{"ruleId":"140","replacedBy":"141"},{"ruleId":"138","replacedBy":"142"},{"ruleId":"140","replacedBy":"143"},{"ruleId":"119","severity":1,"message":"144","line":4,"column":8,"nodeType":"121","messageId":"122","endLine":4,"endColumn":12},{"ruleId":"119","severity":1,"message":"145","line":7,"column":11,"nodeType":"121","messageId":"122","endLine":7,"endColumn":22},{"ruleId":"119","severity":1,"message":"146","line":14,"column":4,"nodeType":"121","messageId":"122","endLine":14,"endColumn":17},{"ruleId":"119","severity":1,"message":"147","line":23,"column":11,"nodeType":"121","messageId":"122","endLine":23,"endColumn":17},{"ruleId":"119","severity":1,"message":"148","line":44,"column":12,"nodeType":"121","messageId":"122","endLine":44,"endColumn":16},{"ruleId":"119","severity":1,"message":"147","line":45,"column":12,"nodeType":"121","messageId":"122","endLine":45,"endColumn":18},{"ruleId":"149","severity":1,"message":"150","line":111,"column":16,"nodeType":"151","endLine":111,"endColumn":28},{"ruleId":"119","severity":1,"message":"152","line":1,"column":39,"nodeType":"121","messageId":"122","endLine":1,"endColumn":53},"@typescript-eslint/no-unused-vars","'current' is defined but never used.","Identifier","unusedVar","'FiLock' is defined but never used.","'FiMail' is defined but never used.","'EscolaridadeFields' is defined but never used.","'string' is defined but never used.","react-hooks/exhaustive-deps","React Hook useCallback has missing dependencies: 'history' and 'user.id'. Either include them or remove the dependency array.","ArrayExpression",["153"],"React Hook useCallback has a missing dependency: 'escolaridadeIndexArray'. Either include it or remove the dependency array. You can also do a functional update 'setEscolaridadeIndexArray(e => ...)' if you only need 'escolaridadeIndexArray' in the 'setEscolaridadeIndexArray' call.",["154"],"React Hook useCallback has a missing dependency: 'experienciaIndexArray'. Either include it or remove the dependency array. You can also do a functional update 'setExperienciaIndexArray(e => ...)' if you only need 'experienciaIndexArray' in the 'setExperienciaIndexArray' call.",["155"],"React Hook useCallback has a missing dependency: 'cursosIndexArray'. Either include it or remove the dependency array. You can also do a functional update 'setCursosIndexArray(c => ...)' if you only need 'cursosIndexArray' in the 'setCursosIndexArray' call.",["156"],"'useState' is defined but never used.","no-native-reassign",["157"],"no-negated-in-lhs",["158"],["157"],["158"],"'icon' is defined but never used.","'FiPaperclip' is defined but never used.","'InfoAdicional' is defined but never used.","'signed' is assigned a value but never used.","'user' is assigned a value but never used.","jsx-a11y/anchor-is-valid","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","'HTMLAttributes' is defined but never used.",{"desc":"159","fix":"160"},{"desc":"161","fix":"162"},{"desc":"163","fix":"164"},{"desc":"165","fix":"166"},"no-global-assign","no-unsafe-negation","Update the dependencies array to be: [escolaridade, experiencia, cursos, user.id, history]",{"range":"167","text":"168"},"Update the dependencies array to be: [escolaridadeIndex, escolaridadeIndexArray]",{"range":"169","text":"170"},"Update the dependencies array to be: [experienciaIndex, experienciaIndexArray]",{"range":"171","text":"172"},"Update the dependencies array to be: [cursosIndex, cursosIndexArray]",{"range":"173","text":"174"},[2880,2915],"[escolaridade, experiencia, cursos, user.id, history]",[3511,3544],"[escolaridadeIndex, escolaridadeIndexArray]",[4025,4056],"[experienciaIndex, experienciaIndexArray]",[4389,4410],"[cursosIndex, cursosIndexArray]"]